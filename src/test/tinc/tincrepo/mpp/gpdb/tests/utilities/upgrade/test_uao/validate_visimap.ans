-- @product_version gpdb: [4.3.2.1 - ]
-- Validate that pg_toast entry for visimap is blank
select count(*) from pg_class where oid=(select visimaprelid from pg_appendonly where relid = (select oid from pg_class where relname='ao_drop')) and reltoastrelid = 0;
 count 
-------
     1
(1 row)

select count(*) from pg_class where oid=(select visimaprelid from pg_appendonly where relid = (select oid from pg_class where relname='aocs_drop')) and reltoastrelid = 0;
 count 
-------
     1
(1 row)

-- Validate that pg_depend catalog table has an entry for visimap
select count(*) from pg_depend where  objid =(select visimaprelid from pg_appendonly where relid =(select oid from pg_class where relname='ao_drop'));
 count 
-------
     1
(1 row)

select count(*) from pg_depend where  objid =(select visimaprelid from pg_appendonly where relid =(select oid from pg_class where relname='aocs_drop'));
 count 
-------
     1
(1 row)

drop table ao_drop;
DROP TABLE
drop table aocs_drop;
DROP TABLE
-- find unattached visimaps
SELECT relname FROM pg_catalog.pg_class WHERE relname LIKE 'pg_aovisimap%' AND relkind = 'm' AND relnamespace=6104 AND oid NOT IN (SELECT visimaprelid FROM pg_catalog.pg_appendonly);
 relname 
---------
(0 rows)

-- find pg_depend inconsistencies
SELECT relid::regclass, visimaprelid::regclass, relid, visimaprelid FROM pg_catalog.pg_appendonly WHERE visimaprelid NOT IN (SELECT objid FROM pg_catalog.pg_depend, pg_catalog.pg_appendonly WHERE pg_depend.refobjid = pg_appendonly.relid);
 relid | visimaprelid | relid | visimaprelid 
-------+--------------+-------+--------------
(0 rows)

-- find superious toast
SELECT reltoastrelid, reltoastrelid::regclass, oid FROM pg_catalog.pg_class WHERE reltoastrelid > 0 AND oid IN (SELECT visimaprelid FROM pg_catalog.pg_appendonly);
 reltoastrelid | reltoastrelid | oid 
---------------+---------------+-----
(0 rows)

CREATE TABLE ao_drop (a INT, b INT) WITH (appendonly=true);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE TABLE aocs_drop (a INT, b INT) WITH (appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
vacuum freeze;
VACUUM
