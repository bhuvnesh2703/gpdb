# do not include any partition table tests in this group
# test 'partition' checks on pg_partition, pg_partition_templates without
# any filters.
test: boolean char name varchar text int2 int4
test: int8 oid float4 float8 bit numeric strings
test: numerology point lseg box path polygon circle
test: date time timetz timestamp timestamptz interval abstime reltime
test: tinterval inet comments oidjoins type_sanity opr_sanity geometry
test: horology insert create_function_1 copyselect constraints create_aggregate
test: drop_if_exists select_having information_schema case indexjoin naivebayes distributed_transactions
test: update delete cluster dependency table_functions conversion sirv_functions sublink guc_env_var shared_scan update_gp

# 'query_finish_pending' sets QueryFinishPending flag to true during sort using fault injectors
# so it needs to be in a group by itself
test: query_finish_pending

test: qp_gist_indexes2 qp_gist_indexes3 qp_gist_indexes4
test: qp_query_execution

# namespace will show diff if concurrent work has temporary tables.
test: without_oid namespace truncate sequence gpdiffcheck gptokencheck olap_setup subtransaction_limit
# test 'partition' needs to serial since occasionally it picks up other tables in its view
test: partition
test: gp_hashagg gp_dqa exttab1 privileges analyze
test: external_table external_table_create_privs
test: column_compression rangefuncs_cdb subselect_gp2 temp

test: custom_format gpcopy appendonly filter gpctas gpdist matrix gpdtm_plpgsql
test: notin with_clause eagerfree toast mapred gpparams tidycat tidycat2 aocs
test: ic gp_numeric_agg foreign_data
test: filespace trig xml auth_constraint role rle portals_updatable plpgsql_cache percentile timeseries resource_queue_function gporca co_nestloop_idxscan pg_stat_last_operation runtime_stats
# NOTE: gporca_faults uses gp_fault_injector - so do not add to a parallel group
test: gporca_faults
test: plan_size partindex_test direct_dispatch partition_pruning_with_fn guc dsp

# vacuum needs to be serial
test: vacuum

# gp_toolkit performs a vacuum and checks that it truncated the relation. That
# # might not happen if other backends are holding transactions open, preventing
# # vacuum from removing dead tuples.
test: gp_toolkit

test: create_type union olap_group olap_window_seq
test: create_table
test: create_function_2 errors copy alter_table_aocs aoco_privileges resource_queue_with_rule
test: create_operator create_misc subselect join aggregates random arrays btree_index
test: hash_index limit prepare rowtypes resource_queue
test: create_index create_view select select_into portals portals_p2
test: select_distinct select_distinct_on select_views
test: aggregate_with_groupingsets
test: nested_case_null
test: bitmapscan bitmapscan_ao

# alter_table and alter_distribution_policy cannot be in a parallel group as
# it does ddls on catalog tables making other queries in the group wait which
# would finish much faster otherwise
test: alter_table
test: alter_distribution_policy
test: alter_table_set

test: bfv_catalog bfv_index bfv_olap bfv_aggregate bfv_partition 
test: bfv_cte bfv_joins bfv_statistic bfv_subquery bfv_planner bfv_legacy
test: bfv_dd bfv_dd_multicolumn bfv_dd_types partition_pruning

test: qp_misc
test: qp_misc_jiras
test: qp_misc_rio
test: qp_olap_mdqa 
test: qp_with_clause
# disabling qp_derived_table 
test: qp_executor qp_olap_windowerr qp_olap_window qp_bitmapscan session_level_memory_consumption memconsumption
test: qp_functions qp_misc_rio_join_small
test: qp_correlated_query 
test: qp_dpe qp_subquery qp_functions_idf qp_resource_queue qp_orca_fallback

test: olap_setup
test: qp_olap_group
test: qp_targeted_dispatch
test: validate_pt_info_relcache

# Tests for "compaction", i.e. VACUUM, of updatable append-only tables
test: uao_compaction/full uao_compaction/outdated_partialindex uao_compaction/drop_column_update uao_compaction/eof_truncate uao_compaction/basic uao_compaction/outdatedindex uao_compaction/update_toast uao_compaction/outdatedindex_abort uao_compaction/delete_toast uao_compaction/alter_table_analyze uao_compaction/full_eof_truncate uao_compaction/full_threshold
# TODO find why these tests fail in parellel, for now keeping them sequential
test: uao_compaction/full_stats
test: uao_compaction/stats
test: uao_compaction/threshold
test: uao_compaction/index_stats
test: uao_compaction/index
test: uao_compaction/drop_column
test: uao_compaction/index2

# Tests for "compaction", i.e. VACUUM, of updatable append-only column oriented tables
test: uaocs_compaction/alter_table_analyze uaocs_compaction/basic uaocs_compaction/drop_column_update uaocs_compaction/eof_truncate uaocs_compaction/full uaocs_compaction/full_eof_truncate uaocs_compaction/full_threshold uaocs_compaction/outdated_partialindex uaocs_compaction/outdatedindex uaocs_compaction/outdatedindex_abort
# TODO find why these tests fail in parellel, for now keeping them sequential
test: uaocs_compaction/full_stats
test: uaocs_compaction/stats
test: uaocs_compaction/threshold
test: uaocs_compaction/index_stats
test: uaocs_compaction/index
test: uaocs_compaction/drop_column

test: AOCO_Compression2

# deadlock tests run separately - because we don't know which one gets stuck.
test: deadlock

# test workfiles
test: workfile/hashagg_spill workfile/hashjoin_spill workfile/materialize_spill workfile/sisc_mat_sort workfile/sisc_sort_spill workfile/sort_spill
# test workfiles compressed using zlib
# 'zlib' utilizes fault injectors so it needs to be in a group by itself
test: zlib

# This test will change the gp_workfile_limit_per_segment and will need to restart the DB.
# It will also use faultinjector - so it needs to be in a group by itself.
test: segspace_setup
test: segspace
test: segspace_cleanup

# This test use faultinjector to cause a PANIC and recovery process.
# So it needs to be in a group by itself.
test: relcache_init_before_xlog_redo

test: caqlcov
