-- start query 1 in stream 0 using template query61.tpl
explain
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100;
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..625420626.98 rows=1 width=24)
   ->  Result  (cost=0.00..625420626.98 rows=1 width=24)
         ->  Sort  (cost=0.00..625420626.98 rows=1 width=16)
               Sort Key: (pg_catalog.sum((sum(store_sales_1.ss_ext_sales_price)))), (pg_catalog.sum((sum(store_sales.ss_ext_sales_price))))
               ->  Nested Loop  (cost=0.00..625420626.98 rows=1 width=16)
                     Join Filter: true
                     ->  Aggregate  (cost=0.00..310405.07 rows=1 width=8)
                           ->  Gather Motion 3:1  (slice13; segments: 3)  (cost=0.00..310405.07 rows=1 width=8)
                                 ->  Aggregate  (cost=0.00..310405.07 rows=1 width=8)
                                       ->  Hash Join  (cost=0.00..310405.03 rows=66470 width=6)
                                             Hash Cond: (store_sales_1.ss_promo_sk = promotion.p_promo_sk)
                                             ->  Hash Join  (cost=0.00..309960.18 rows=66470 width=10)
                                                   Hash Cond: (store_sales_1.ss_store_sk = store_1.s_store_sk)
                                                   ->  Hash Join  (cost=0.00..309441.94 rows=465290 width=14)
                                                         Hash Cond: (store_sales_1.ss_item_sk = item_1.i_item_sk)
                                                         ->  Hash Join  (cost=0.00..308117.54 rows=4560589 width=18)
                                                               Hash Cond: (store_sales_1.ss_customer_sk = customer_1.c_customer_sk)
                                                               ->  Hash Join  (cost=0.00..299650.35 rows=28565779 width=22)
                                                                     Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
                                                                     ->  Dynamic Table Scan on store_sales store_sales_1 (dynamic scan id: 1)  (cost=0.00..68542.76 rows=959996672 width=26)
                                                                     ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                           ->  Partition Selector for store_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=0.00..434.56 rows=55 width=4)
                                                                                       ->  Table Scan on date_dim date_dim_1  (cost=0.00..434.56 rows=19 width=4)
                                                                                             Filter: ((d_year = 1999) AND (d_moy = 11))
                                                               ->  Hash  (cost=2466.88..2466.88 rows=1915811 width=4)
                                                                     ->  Broadcast Motion 3:3  (slice9; segments: 3)  (cost=0.00..2466.88 rows=1915811 width=4)
                                                                           ->  Hash Join  (cost=0.00..2329.71 rows=638604 width=4)
                                                                                 Hash Cond: (customer_1.c_current_addr_sk = customer_address_1.ca_address_sk)
                                                                                 ->  Redistribute Motion 3:3  (slice8; segments: 3)  (cost=0.00..914.08 rows=3999967 width=8)
                                                                                       Hash Key: customer_1.c_current_addr_sk
                                                                                       ->  Table Scan on customer customer_1  (cost=0.00..754.40 rows=3999967 width=8)
                                                                                 ->  Hash  (cost=651.14..651.14 rows=214177 width=4)
                                                                                       ->  Table Scan on customer_address customer_address_1  (cost=0.00..651.14 rows=214177 width=4)
                                                                                             Filter: (ca_gmt_offset = (-7)::numeric)
                                                         ->  Hash  (cost=453.28..453.28 rows=29859 width=4)
                                                               ->  Broadcast Motion 3:3  (slice10; segments: 3)  (cost=0.00..453.28 rows=29859 width=4)
                                                                     ->  Table Scan on item item_1  (cost=0.00..451.14 rows=9953 width=4)
                                                                           Filter: ((i_category)::text = 'Electronics'::text)
                                                   ->  Hash  (cost=431.07..431.07 rows=72 width=4)
                                                         ->  Broadcast Motion 3:3  (slice11; segments: 3)  (cost=0.00..431.07 rows=72 width=4)
                                                               ->  Table Scan on store store_1  (cost=0.00..431.06 rows=24 width=4)
                                                                     Filter: (s_gmt_offset = (-7)::numeric)
                                             ->  Hash  (cost=431.21..431.21 rows=1500 width=4)
                                                   ->  Broadcast Motion 3:3  (slice12; segments: 3)  (cost=0.00..431.21 rows=1500 width=4)
                                                         ->  Table Scan on promotion  (cost=0.00..431.10 rows=500 width=4)
                                                               Filter: ((p_channel_dmail = 'Y'::bpchar) OR (p_channel_email = 'Y'::bpchar) OR (p_channel_tv = 'Y'::bpchar))
                     ->  Aggregate  (cost=0.00..299926.26 rows=1 width=8)
                           ->  Materialize  (cost=0.00..299926.26 rows=1 width=8)
                                 ->  Gather Motion 3:1  (slice6; segments: 3)  (cost=0.00..299926.26 rows=1 width=8)
                                       ->  Aggregate  (cost=0.00..299926.26 rows=1 width=8)
                                             ->  Hash Join  (cost=0.00..299926.21 rows=66470 width=6)
                                                   Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                                   ->  Hash Join  (cost=0.00..299410.03 rows=465290 width=10)
                                                         Hash Cond: (store_sales.ss_item_sk = item.i_item_sk)
                                                         ->  Hash Join  (cost=0.00..298103.25 rows=4560589 width=14)
                                                               Hash Cond: (store_sales.ss_customer_sk = customer.c_customer_sk)
                                                               ->  Hash Join  (cost=0.00..289769.50 rows=28565779 width=18)
                                                                     Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                                     ->  Dynamic Table Scan on store_sales (dynamic scan id: 2)  (cost=0.00..68542.76 rows=959996672 width=22)
                                                                     ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                           ->  Partition Selector for store_sales (dynamic scan id: 2)  (cost=10.00..100.00 rows=34 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice1; segments: 3)  (cost=0.00..434.56 rows=55 width=4)
                                                                                       ->  Table Scan on date_dim  (cost=0.00..434.56 rows=19 width=4)
                                                                                             Filter: ((d_year = 1999) AND (d_moy = 11))
                                                               ->  Hash  (cost=2466.88..2466.88 rows=1915811 width=4)
                                                                     ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=0.00..2466.88 rows=1915811 width=4)
                                                                           ->  Hash Join  (cost=0.00..2329.71 rows=638604 width=4)
                                                                                 Hash Cond: (customer.c_current_addr_sk = customer_address.ca_address_sk)
                                                                                 ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..914.08 rows=3999967 width=8)
                                                                                       Hash Key: customer.c_current_addr_sk
                                                                                       ->  Table Scan on customer  (cost=0.00..754.40 rows=3999967 width=8)
                                                                                 ->  Hash  (cost=651.14..651.14 rows=214177 width=4)
                                                                                       ->  Table Scan on customer_address  (cost=0.00..651.14 rows=214177 width=4)
                                                                                             Filter: (ca_gmt_offset = (-7)::numeric)
                                                         ->  Hash  (cost=453.28..453.28 rows=29859 width=4)
                                                               ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..453.28 rows=29859 width=4)
                                                                     ->  Table Scan on item  (cost=0.00..451.14 rows=9953 width=4)
                                                                           Filter: ((i_category)::text = 'Electronics'::text)
                                                   ->  Hash  (cost=431.07..431.07 rows=72 width=4)
                                                         ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.00..431.07 rows=72 width=4)
                                                               ->  Table Scan on store  (cost=0.00..431.06 rows=24 width=4)
                                                                     Filter: (s_gmt_offset = (-7)::numeric)
 Planning time: 2385.223 ms
 Optimizer: PQO version 3.8.0
(85 rows)

-- end query 1 in stream 0 using template query61.tpl
