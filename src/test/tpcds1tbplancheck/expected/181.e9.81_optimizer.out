-- start query 1 in stream 0 using template query81.tpl
explain
with customer_total_return as
 (select cr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(cr_return_amt_inc_tax) as ctr_total_return
 from catalog_returns
     ,date_dim
     ,customer_address
 where cr_returned_date_sk = d_date_sk 
   and d_year =1998
   and cr_returning_addr_sk = ca_address_sk 
 group by cr_returning_customer_sk
         ,ca_state )
  select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'IL'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 limit 100;


 Gather Motion 3:1  (slice10; segments: 3)  (cost=0.00..31175.45 rows=100 width=128)
   Merge Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer_address.ca_street_number, customer_address.ca_street_name, customer_address.ca_street_type, customer_address.ca_suite_number, customer_address.ca_city, customer_address.ca_county, customer_address.ca_state, customer_address.ca_zip, customer_address.ca_country, customer_address.ca_gmt_offset, customer_address.ca_location_type, share0_ref3.ctr_total_return
   ->  Sort  (cost=0.00..31175.41 rows=34 width=128)
         Sort Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer_address.ca_street_number, customer_address.ca_street_name, customer_address.ca_street_type, customer_address.ca_suite_number, customer_address.ca_city, customer_address.ca_county, customer_address.ca_state, customer_address.ca_zip, customer_address.ca_country, customer_address.ca_gmt_offset, customer_address.ca_location_type, share0_ref3.ctr_total_return
         ->  Sequence  (cost=0.00..31175.28 rows=34 width=128)
               ->  Shared Scan (share slice:id 10:0)  (cost=0.00..23112.95 rows=8360226 width=1)
                     ->  Materialize  (cost=0.00..23112.95 rows=8360226 width=1)
                           ->  HashAggregate  (cost=0.00..23104.59 rows=8360226 width=15)
                                 Group Key: catalog_returns.cr_returning_customer_sk, customer_address_1.ca_state
                                 ->  Redistribute Motion 3:3  (slice9; segments: 3)  (cost=0.00..20999.69 rows=8360226 width=15)
                                       Hash Key: catalog_returns.cr_returning_customer_sk, customer_address_1.ca_state
                                       ->  Result  (cost=0.00..20607.18 rows=8360226 width=15)
                                             ->  HashAggregate  (cost=0.00..20607.18 rows=8360226 width=15)
                                                   Group Key: catalog_returns.cr_returning_customer_sk, customer_address_1.ca_state
                                                   ->  Hash Join  (cost=0.00..18502.29 rows=8360226 width=12)
                                                         Hash Cond: (catalog_returns.cr_returning_addr_sk = customer_address_1.ca_address_sk)
                                                         ->  Redistribute Motion 3:3  (slice8; segments: 3)  (cost=0.00..15506.24 rows=8360226 width=13)
                                                               Hash Key: catalog_returns.cr_returning_addr_sk
                                                               ->  Hash Join  (cost=0.00..15166.06 rows=8360226 width=13)
                                                                     Hash Cond: (catalog_returns.cr_returned_date_sk = date_dim.d_date_sk)
                                                                     ->  Dynamic Table Scan on catalog_returns (dynamic scan id: 1)  (cost=0.00..3994.93 rows=47998998 width=17)
                                                                     ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                           ->  Partition Selector for catalog_returns (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=0.00..433.78 rows=366 width=4)
                                                                                       ->  Table Scan on date_dim  (cost=0.00..433.76 rows=122 width=4)
                                                                                             Filter: (d_year = 1998)
                                                         ->  Hash  (cost=581.74..581.74 rows=2000530 width=7)
                                                               ->  Table Scan on customer_address customer_address_1  (cost=0.00..581.74 rows=2000530 width=7)
               ->  Redistribute Motion 1:3  (slice6)  (cost=0.00..8062.33 rows=100 width=128)
                     ->  Limit  (cost=0.00..8062.30 rows=34 width=128)
                           ->  Gather Motion 3:1  (slice5; segments: 3)  (cost=0.00..8062.28 rows=100 width=128)
                                 Merge Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer_address.ca_street_number, customer_address.ca_street_name, customer_address.ca_street_type, customer_address.ca_suite_number, customer_address.ca_city, customer_address.ca_county, customer_address.ca_state, customer_address.ca_zip, customer_address.ca_country, customer_address.ca_gmt_offset, customer_address.ca_location_type, share0_ref3.ctr_total_return
                                 ->  Limit  (cost=0.00..8062.24 rows=34 width=128)
                                       ->  Sort  (cost=0.00..8062.23 rows=94981 width=128)
                                             Sort Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer_address.ca_street_number, customer_address.ca_street_name, customer_address.ca_street_type, customer_address.ca_suite_number, customer_address.ca_city, customer_address.ca_county, customer_address.ca_state, customer_address.ca_zip, customer_address.ca_country, customer_address.ca_gmt_offset, customer_address.ca_location_type, share0_ref3.ctr_total_return
                                             ->  Hash Join  (cost=0.00..6922.39 rows=94981 width=128)
                                                   Hash Cond: (share0_ref3.cr_returning_customer_sk = customer.c_customer_sk)
                                                   ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=0.00..2946.32 rows=3344091 width=12)
                                                         Hash Key: share0_ref3.cr_returning_customer_sk
                                                         ->  Hash Join  (cost=0.00..2820.71 rows=3344091 width=12)
                                                               Hash Cond: ((share0_ref3.ca_state)::text = (share0_ref2.ca_state)::text)
                                                               Join Filter: (share0_ref3.ctr_total_return > (((pg_catalog.avg((avg(share0_ref2.ctr_total_return)))) * 1.2)))
                                                               ->  Shared Scan (share slice:id 3:0)  (cost=0.00..551.89 rows=3344091 width=15)
                                                               ->  Hash  (cost=935.39..935.39 rows=52 width=11)
                                                                     ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=0.00..935.39 rows=52 width=11)
                                                                           ->  Result  (cost=0.00..935.38 rows=18 width=11)
                                                                                 ->  Result  (cost=0.00..935.38 rows=18 width=11)
                                                                                       ->  HashAggregate  (cost=0.00..935.38 rows=18 width=11)
                                                                                             Group Key: share0_ref2.ca_state
                                                                                             ->  Redistribute Motion 3:3  (slice1; segments: 3)  (cost=0.00..935.38 rows=18 width=11)
                                                                                                   Hash Key: share0_ref2.ca_state
                                                                                                   ->  Result  (cost=0.00..935.38 rows=18 width=11)
                                                                                                         ->  HashAggregate  (cost=0.00..935.38 rows=18 width=11)
                                                                                                               Group Key: share0_ref2.ca_state
                                                                                                               ->  Shared Scan (share slice:id 1:0)  (cost=0.00..519.65 rows=3344091 width=11)
                                                   ->  Hash  (cost=2996.74..2996.74 rows=113610 width=124)
                                                         ->  Hash Join  (cost=0.00..2996.74 rows=113610 width=124)
                                                               Hash Cond: (customer.c_current_addr_sk = customer_address.ca_address_sk)
                                                               ->  Table Scan on customer  (cost=0.00..754.40 rows=3999967 width=42)
                                                               ->  Hash  (cost=838.09..838.09 rows=114309 width=90)
                                                                     ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..838.09 rows=114309 width=90)
                                                                           ->  Table Scan on customer_address  (cost=0.00..653.94 rows=38103 width=90)
                                                                                 Filter: ((ca_state)::text = 'IL'::text)
 Planning time: 460.897 ms
 Optimizer: PQO version 3.8.0
(65 rows)

-- end query 1 in stream 0 using template query81.tpl
