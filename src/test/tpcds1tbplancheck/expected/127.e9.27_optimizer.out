-- start query 1 in stream 0 using template query27.tpl
explain
select  i_item_id,
        s_state, grouping(s_state) g_state,
        avg(ss_quantity) agg1,
        avg(ss_list_price) agg2,
        avg(ss_coupon_amt) agg3,
        avg(ss_sales_price) agg4
 from store_sales, customer_demographics, date_dim, store, item
 where ss_sold_date_sk = d_date_sk and
       ss_item_sk = i_item_sk and
       ss_store_sk = s_store_sk and
       ss_cdemo_sk = cd_demo_sk and
       cd_gender = 'F' and
       cd_marital_status = 'M' and
       cd_education_status = '4 yr Degree' and
       d_year = 2002 and
       s_state in ('NE','IN', 'SD', 'MN', 'TX', 'MN')
 group by rollup (i_item_id, s_state)
 order by i_item_id
         ,s_state
 limit 100;
                                                                                                       QUERY PLAN                                                                                                        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..339216.51 rows=34 width=60)
   ->  Gather Motion 3:1  (slice9; segments: 3)  (cost=0.00..339216.50 rows=100 width=60)
         Merge Key: share0_ref2.i_item_id, share0_ref2.s_state
         ->  Limit  (cost=0.00..339216.48 rows=34 width=60)
               ->  Sort  (cost=0.00..339216.48 rows=60328 width=60)
                     Sort Key: share0_ref2.i_item_id, share0_ref2.s_state
                     ->  Sequence  (cost=0.00..338890.55 rows=60328 width=60)
                           ->  Shared Scan (share slice:id 9:0)  (cost=0.00..337542.98 rows=982998 width=1)
                                 ->  Materialize  (cost=0.00..337542.98 rows=982998 width=1)
                                       ->  Hash Join  (cost=0.00..337542.00 rows=982998 width=39)
                                             Hash Cond: (store_sales.ss_item_sk = item.i_item_sk)
                                             ->  Redistribute Motion 3:3  (slice8; segments: 3)  (cost=0.00..336712.31 rows=982998 width=26)
                                                   Hash Key: store_sales.ss_item_sk
                                                   ->  Hash Join  (cost=0.00..336632.31 rows=982998 width=26)
                                                         Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                         ->  Hash Join  (cost=0.00..335168.72 rows=4895546 width=30)
                                                               Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                                               ->  Hash Join  (cost=0.00..324416.62 rows=50898029 width=31)
                                                                     Hash Cond: (store_sales.ss_cdemo_sk = customer_demographics.cd_demo_sk)
                                                                     ->  Dynamic Table Scan on store_sales (dynamic scan id: 1)  (cost=0.00..68542.76 rows=959996672 width=35)
                                                                     ->  Hash  (cost=527.27..527.27 rows=97564 width=4)
                                                                           ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.00..527.27 rows=97564 width=4)
                                                                                 ->  Table Scan on customer_demographics  (cost=0.00..520.28 rows=32522 width=4)
                                                                                       Filter: ((cd_gender = 'F'::bpchar) AND (cd_marital_status = 'M'::bpchar) AND ((cd_education_status)::text = '4 yr Degree'::text))
                                                               ->  Hash  (cost=431.07..431.07 rows=49 width=7)
                                                                     ->  Broadcast Motion 3:3  (slice6; segments: 3)  (cost=0.00..431.07 rows=49 width=7)
                                                                           ->  Table Scan on store  (cost=0.00..431.06 rows=17 width=7)
                                                                                 Filter: ((s_state)::text = ANY ('{NE,IN,SD,MN,TX,MN}'::text[]))
                                                         ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                               ->  Partition Selector for store_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                     ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=0.00..433.78 rows=366 width=4)
                                                                           ->  Table Scan on date_dim  (cost=0.00..433.76 rows=122 width=4)
                                                                                 Filter: (d_year = 2002)
                                             ->  Hash  (cost=447.68..447.68 rows=99749 width=21)
                                                   ->  Table Scan on item  (cost=0.00..447.68 rows=99749 width=21)
                           ->  Append  (cost=0.00..1343.96 rows=60328 width=60)
                                 ->  Result  (cost=0.00..457.50 rows=30164 width=60)
                                       ->  HashAggregate  (cost=0.00..455.69 rows=30164 width=52)
                                             Group Key: share0_ref2.i_item_id, share0_ref2.s_state
                                             ->  Redistribute Motion 3:3  (slice1; segments: 3)  (cost=0.00..447.22 rows=30164 width=52)
                                                   Hash Key: share0_ref2.i_item_id, share0_ref2.s_state
                                                   ->  Result  (cost=0.00..442.31 rows=30164 width=52)
                                                         ->  HashAggregate  (cost=0.00..442.31 rows=30164 width=52)
                                                               Group Key: share0_ref2.i_item_id, share0_ref2.s_state
                                                               ->  Shared Scan (share slice:id 1:0)  (cost=0.00..433.84 rows=30164 width=39)
                                 ->  Result  (cost=0.00..449.43 rows=30164 width=65)
                                       ->  HashAggregate  (cost=0.00..447.47 rows=30164 width=49)
                                             Group Key: share0_ref3.i_item_id
                                             ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..442.86 rows=30164 width=49)
                                                   Hash Key: share0_ref3.i_item_id
                                                   ->  Result  (cost=0.00..438.23 rows=30164 width=49)
                                                         ->  HashAggregate  (cost=0.00..438.23 rows=30164 width=49)
                                                               Group Key: share0_ref3.i_item_id
                                                               ->  Shared Scan (share slice:id 2:0)  (cost=0.00..433.62 rows=30164 width=36)
                                 ->  Result  (cost=0.00..433.41 rows=1 width=56)
                                       ->  Redistribute Motion 1:3  (slice4)  (cost=0.00..433.41 rows=1 width=32)
                                             ->  Aggregate  (cost=0.00..433.41 rows=1 width=32)
                                                   ->  Gather Motion 3:1  (slice3; segments: 3)  (cost=0.00..433.41 rows=1 width=32)
                                                         ->  Aggregate  (cost=0.00..433.41 rows=1 width=32)
                                                               ->  Shared Scan (share slice:id 3:0)  (cost=0.00..432.38 rows=30164 width=19)
 Planning time: 670.167 ms
 Optimizer: PQO version 3.8.0
(62 rows)

-- end query 1 in stream 0 using template query27.tpl
