-- start query 1 in stream 0 using template query60.tpl
explain
with ss as (
 select
          i_item_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id in (select
  i_item_id
from
 item
where i_category in ('Children'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 9
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 cs as (
 select
          i_item_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Children'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 9
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 ws as (
 select
          i_item_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Children'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 9
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6
 group by i_item_id)
  select   
  i_item_id
,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_item_id
 order by i_item_id
      ,total_sales
 limit 100;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=0.00..526084.87 rows=34 width=25)
   Sort Key: item.i_item_id, (sum((pg_catalog.sum((sum(store_sales.ss_ext_sales_price))))))
   ->  Limit  (cost=0.00..526084.78 rows=34 width=25)
         ->  Gather Motion 3:1  (slice19; segments: 3)  (cost=0.00..526084.77 rows=100 width=25)
               Merge Key: item.i_item_id, (sum((pg_catalog.sum((sum(store_sales.ss_ext_sales_price))))))
               ->  Limit  (cost=0.00..526084.76 rows=34 width=25)
                     ->  Sort  (cost=0.00..526084.76 rows=42635 width=25)
                           Sort Key: item.i_item_id, (sum((pg_catalog.sum((sum(store_sales.ss_ext_sales_price))))))
                           ->  HashAggregate  (cost=0.00..525991.82 rows=42635 width=25)
                                 Group Key: item.i_item_id
                                 ->  Append  (cost=0.00..525975.51 rows=127904 width=25)
                                       ->  HashAggregate  (cost=0.00..290068.35 rows=42635 width=25)
                                             Group Key: item.i_item_id
                                             ->  Redistribute Motion 3:3  (slice6; segments: 3)  (cost=0.00..290066.53 rows=9953 width=25)
                                                   Hash Key: item.i_item_id
                                                   ->  Result  (cost=0.00..290065.75 rows=9953 width=25)
                                                         ->  HashAggregate  (cost=0.00..290065.75 rows=9953 width=25)
                                                               Group Key: item.i_item_id
                                                               ->  Hash Join  (cost=0.00..289626.71 rows=3381609 width=23)
                                                                     Hash Cond: (store_sales.ss_addr_sk = customer_address.ca_address_sk)
                                                                     ->  Hash Join  (cost=0.00..286731.83 rows=6671329 width=27)
                                                                           Hash Cond: (store_sales.ss_item_sk = item.i_item_sk)
                                                                           ->  Hash Join  (cost=0.00..279889.22 rows=28577431 width=14)
                                                                                 Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                                                 ->  Dynamic Table Scan on store_sales (dynamic scan id: 1)  (cost=0.00..68542.76 rows=959996672 width=18)
                                                                                 ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                       ->  Partition Selector for store_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                                             ->  Broadcast Motion 3:3  (slice1; segments: 3)  (cost=0.00..434.56 rows=55 width=4)
                                                                                                   ->  Table Scan on date_dim  (cost=0.00..434.56 rows=19 width=4)
                                                                                                         Filter: ((d_year = 1999) AND (d_moy = 9))
                                                                           ->  Hash  (cost=961.47..961.47 rows=69859 width=21)
                                                                                 ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..961.47 rows=69859 width=21)
                                                                                       ->  Hash Semi Join  (cost=0.00..935.21 rows=23287 width=21)
                                                                                             Hash Cond: ((item.i_item_id)::text = (item_1.i_item_id)::text)
                                                                                             ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..458.13 rows=99749 width=21)
                                                                                                   Hash Key: item.i_item_id
                                                                                                   ->  Table Scan on item  (cost=0.00..447.68 rows=99749 width=21)
                                                                                             ->  Hash  (cost=451.92..451.92 rows=9953 width=17)
                                                                                                   ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=0.00..451.92 rows=9953 width=17)
                                                                                                         Hash Key: (item_1.i_item_id)::text
                                                                                                         ->  Table Scan on item item_1  (cost=0.00..451.39 rows=9953 width=17)
                                                                                                               Filter: ((i_category)::text = 'Children'::text)
                                                                     ->  Hash  (cost=850.87..850.87 rows=2634266 width=4)
                                                                           ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.00..850.87 rows=2634266 width=4)
                                                                                 ->  Table Scan on customer_address  (cost=0.00..662.26 rows=878089 width=4)
                                                                                       Filter: (ca_gmt_offset = (-6)::numeric)
                                       ->  HashAggregate  (cost=0.00..156697.24 rows=42635 width=25)
                                             Group Key: item_2.i_item_id
                                             ->  Redistribute Motion 3:3  (slice12; segments: 3)  (cost=0.00..156695.42 rows=9953 width=25)
                                                   Hash Key: item_2.i_item_id
                                                   ->  Result  (cost=0.00..156694.64 rows=9953 width=25)
                                                         ->  HashAggregate  (cost=0.00..156694.64 rows=9953 width=25)
                                                               Group Key: item_2.i_item_id
                                                               ->  Hash Join  (cost=0.00..156483.45 rows=1626357 width=22)
                                                                     Hash Cond: (catalog_sales.cs_bill_addr_sk = customer_address_1.ca_address_sk)
                                                                     ->  Redistribute Motion 3:3  (slice11; segments: 3)  (cost=0.00..154900.71 rows=3310154 width=26)
                                                                           Hash Key: catalog_sales.cs_bill_addr_sk
                                                                           ->  Hash Join  (cost=0.00..154631.33 rows=3310154 width=26)
                                                                                 Hash Cond: (catalog_sales.cs_item_sk = item_2.i_item_sk)
                                                                                 ->  Hash Join  (cost=0.00..150751.71 rows=14179434 width=13)
                                                                                       Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_1.d_date_sk)
                                                                                       ->  Dynamic Table Scan on catalog_sales (dynamic scan id: 2)  (cost=0.00..46102.37 rows=479993344 width=17)
                                                                                       ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                             ->  Partition Selector for catalog_sales (dynamic scan id: 2)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                   ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=0.00..434.56 rows=55 width=4)
                                                                                                         ->  Table Scan on date_dim date_dim_1  (cost=0.00..434.56 rows=19 width=4)
                                                                                                               Filter: ((d_year = 1999) AND (d_moy = 9))
                                                                                 ->  Hash  (cost=961.47..961.47 rows=69859 width=21)
                                                                                       ->  Broadcast Motion 3:3  (slice10; segments: 3)  (cost=0.00..961.47 rows=69859 width=21)
                                                                                             ->  Hash Semi Join  (cost=0.00..935.21 rows=23287 width=21)
                                                                                                   Hash Cond: ((item_2.i_item_id)::text = (item_3.i_item_id)::text)
                                                                                                   ->  Redistribute Motion 3:3  (slice8; segments: 3)  (cost=0.00..458.13 rows=99749 width=21)
                                                                                                         Hash Key: item_2.i_item_id
                                                                                                         ->  Table Scan on item item_2  (cost=0.00..447.68 rows=99749 width=21)
                                                                                                   ->  Hash  (cost=451.92..451.92 rows=9953 width=17)
                                                                                                         ->  Redistribute Motion 3:3  (slice9; segments: 3)  (cost=0.00..451.92 rows=9953 width=17)
                                                                                                               Hash Key: (item_3.i_item_id)::text
                                                                                                               ->  Table Scan on item item_3  (cost=0.00..451.39 rows=9953 width=17)
                                                                                                                     Filter: ((i_category)::text = 'Children'::text)
                                                                     ->  Hash  (cost=662.26..662.26 rows=878089 width=4)
                                                                           ->  Table Scan on customer_address customer_address_1  (cost=0.00..662.26 rows=878089 width=4)
                                                                                 Filter: (ca_gmt_offset = (-6)::numeric)
                                       ->  HashAggregate  (cost=0.00..79206.72 rows=42635 width=25)
                                             Group Key: item_4.i_item_id
                                             ->  Redistribute Motion 3:3  (slice18; segments: 3)  (cost=0.00..79204.90 rows=9953 width=25)
                                                   Hash Key: item_4.i_item_id
                                                   ->  Result  (cost=0.00..79204.12 rows=9953 width=25)
                                                         ->  HashAggregate  (cost=0.00..79204.12 rows=9953 width=25)
                                                               Group Key: item_4.i_item_id
                                                               ->  Hash Join  (cost=0.00..79087.88 rows=894930 width=22)
                                                                     Hash Cond: (web_sales.ws_bill_addr_sk = customer_address_2.ca_address_sk)
                                                                     ->  Redistribute Motion 3:3  (slice17; segments: 3)  (cost=0.00..77872.72 rows=1668756 width=26)
                                                                           Hash Key: web_sales.ws_bill_addr_sk
                                                                           ->  Hash Join  (cost=0.00..77736.92 rows=1668756 width=26)
                                                                                 Hash Cond: (web_sales.ws_item_sk = item_4.i_item_sk)
                                                                                 ->  Hash Join  (cost=0.00..75284.34 rows=7148313 width=13)
                                                                                       Hash Cond: (web_sales.ws_sold_date_sk = date_dim_2.d_date_sk)
                                                                                       ->  Dynamic Table Scan on web_sales (dynamic scan id: 3)  (cost=0.00..22739.00 rows=240000000 width=17)
                                                                                       ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                             ->  Partition Selector for web_sales (dynamic scan id: 3)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                   ->  Broadcast Motion 3:3  (slice13; segments: 3)  (cost=0.00..434.56 rows=55 width=4)
                                                                                                         ->  Table Scan on date_dim date_dim_2  (cost=0.00..434.56 rows=19 width=4)
                                                                                                               Filter: ((d_year = 1999) AND (d_moy = 9))
                                                                                 ->  Hash  (cost=961.47..961.47 rows=69859 width=21)
                                                                                       ->  Broadcast Motion 3:3  (slice16; segments: 3)  (cost=0.00..961.47 rows=69859 width=21)
                                                                                             ->  Hash Semi Join  (cost=0.00..935.21 rows=23287 width=21)
                                                                                                   Hash Cond: ((item_4.i_item_id)::text = (item_5.i_item_id)::text)
                                                                                                   ->  Redistribute Motion 3:3  (slice14; segments: 3)  (cost=0.00..458.13 rows=99749 width=21)
                                                                                                         Hash Key: item_4.i_item_id
                                                                                                         ->  Table Scan on item item_4  (cost=0.00..447.68 rows=99749 width=21)
                                                                                                   ->  Hash  (cost=451.92..451.92 rows=9953 width=17)
                                                                                                         ->  Redistribute Motion 3:3  (slice15; segments: 3)  (cost=0.00..451.92 rows=9953 width=17)
                                                                                                               Hash Key: (item_5.i_item_id)::text
                                                                                                               ->  Table Scan on item item_5  (cost=0.00..451.39 rows=9953 width=17)
                                                                                                                     Filter: ((i_category)::text = 'Children'::text)
                                                                     ->  Hash  (cost=662.26..662.26 rows=878089 width=4)
                                                                           ->  Table Scan on customer_address customer_address_2  (cost=0.00..662.26 rows=878089 width=4)
                                                                                 Filter: (ca_gmt_offset = (-6)::numeric)
 Planning time: 3298.885 ms
 Optimizer: PQO version 3.8.0
(120 rows)

-- end query 1 in stream 0 using template query60.tpl
