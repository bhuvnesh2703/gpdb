-- start query 1 in stream 0 using template query30.tpl
explain
with customer_total_return as
 (select wr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(wr_return_amt) as ctr_total_return
 from web_returns
     ,date_dim
     ,customer_address
 where wr_returned_date_sk = d_date_sk 
   and d_year =2002
   and wr_returning_addr_sk = ca_address_sk 
 group by wr_returning_customer_sk
         ,ca_state)
  select  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
       ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
       ,c_last_review_date,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'IL'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
                  ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
                  ,c_last_review_date,ctr_total_return
limit 100;
                                                                                                                                                                                       QUERY PLAN                                                                                                                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice10; segments: 3)  (cost=0.00..18436.51 rows=100 width=101)
   Merge Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date, share0_ref3.ctr_total_return
   ->  Sort  (cost=0.00..18436.47 rows=34 width=101)
         Sort Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date, share0_ref3.ctr_total_return
         ->  Sequence  (cost=0.00..18436.38 rows=34 width=101)
               ->  Shared Scan (share slice:id 10:0)  (cost=0.00..12431.01 rows=4028298 width=1)
                     ->  Materialize  (cost=0.00..12431.01 rows=4028298 width=1)
                           ->  HashAggregate  (cost=0.00..12426.98 rows=4028298 width=15)
                                 Group Key: web_returns.wr_returning_customer_sk, customer_address_1.ca_state
                                 ->  Redistribute Motion 3:3  (slice9; segments: 3)  (cost=0.00..11412.76 rows=4028298 width=15)
                                       Hash Key: web_returns.wr_returning_customer_sk, customer_address_1.ca_state
                                       ->  Result  (cost=0.00..11223.63 rows=4028298 width=15)
                                             ->  HashAggregate  (cost=0.00..11223.63 rows=4028298 width=15)
                                                   Group Key: web_returns.wr_returning_customer_sk, customer_address_1.ca_state
                                                   ->  Hash Join  (cost=0.00..10209.40 rows=4028298 width=13)
                                                         Hash Cond: (web_returns.wr_returning_addr_sk = customer_address_1.ca_address_sk)
                                                         ->  Redistribute Motion 3:3  (slice8; segments: 3)  (cost=0.00..8165.93 rows=4028298 width=14)
                                                               Hash Key: web_returns.wr_returning_addr_sk
                                                               ->  Hash Join  (cost=0.00..7989.41 rows=4028298 width=14)
                                                                     Hash Cond: (web_returns.wr_returned_date_sk = date_dim.d_date_sk)
                                                                     ->  Dynamic Table Scan on web_returns (dynamic scan id: 1)  (cost=0.00..2120.54 rows=23999168 width=18)
                                                                     ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                           ->  Partition Selector for web_returns (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=0.00..433.78 rows=366 width=4)
                                                                                       ->  Table Scan on date_dim  (cost=0.00..433.76 rows=122 width=4)
                                                                                             Filter: (d_year = 2002)
                                                         ->  Hash  (cost=581.74..581.74 rows=2000530 width=7)
                                                               ->  Table Scan on customer_address customer_address_1  (cost=0.00..581.74 rows=2000530 width=7)
               ->  Redistribute Motion 1:3  (slice6)  (cost=0.00..6005.36 rows=100 width=101)
                     ->  Limit  (cost=0.00..6005.34 rows=34 width=101)
                           ->  Gather Motion 3:1  (slice5; segments: 3)  (cost=0.00..6005.33 rows=100 width=101)
                                 Merge Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date, share0_ref3.ctr_total_return
                                 ->  Limit  (cost=0.00..6005.29 rows=34 width=101)
                                       ->  Sort  (cost=0.00..6005.29 rows=45766 width=101)
                                             Sort Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date, share0_ref3.ctr_total_return
                                             ->  Hash Join  (cost=0.00..5599.52 rows=45766 width=101)
                                                   Hash Cond: (share0_ref3.wr_returning_customer_sk = customer.c_customer_sk)
                                                   ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=0.00..1866.33 rows=1611320 width=12)
                                                         Hash Key: share0_ref3.wr_returning_customer_sk
                                                         ->  Hash Join  (cost=0.00..1805.81 rows=1611320 width=12)
                                                               Hash Cond: ((share0_ref3.ca_state)::text = (share0_ref2.ca_state)::text)
                                                               Join Filter: (share0_ref3.ctr_total_return > (((pg_catalog.avg((avg(share0_ref2.ctr_total_return)))) * 1.2)))
                                                               ->  Shared Scan (share slice:id 3:0)  (cost=0.00..489.25 rows=1611320 width=15)
                                                               ->  Hash  (cost=674.04..674.04 rows=52 width=11)
                                                                     ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=0.00..674.04 rows=52 width=11)
                                                                           ->  Result  (cost=0.00..674.03 rows=18 width=11)
                                                                                 ->  Result  (cost=0.00..674.03 rows=18 width=11)
                                                                                       ->  HashAggregate  (cost=0.00..674.03 rows=18 width=11)
                                                                                             Group Key: share0_ref2.ca_state
                                                                                             ->  Redistribute Motion 3:3  (slice1; segments: 3)  (cost=0.00..674.03 rows=18 width=11)
                                                                                                   Hash Key: share0_ref2.ca_state
                                                                                                   ->  Result  (cost=0.00..674.03 rows=18 width=11)
                                                                                                         ->  HashAggregate  (cost=0.00..674.03 rows=18 width=11)
                                                                                                               Group Key: share0_ref2.ca_state
                                                                                                               ->  Shared Scan (share slice:id 1:0)  (cost=0.00..473.72 rows=1611320 width=11)
                                                   ->  Hash  (cost=3163.68..3163.68 rows=113610 width=97)
                                                         ->  Hash Join  (cost=0.00..3163.68 rows=113610 width=97)
                                                               Hash Cond: (customer.c_current_addr_sk = customer_address.ca_address_sk)
                                                               ->  Table Scan on customer  (cost=0.00..754.40 rows=3999967 width=101)
                                                               ->  Hash  (cost=656.24..656.24 rows=114309 width=4)
                                                                     ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..656.24 rows=114309 width=4)
                                                                           ->  Table Scan on customer_address  (cost=0.00..648.05 rows=38103 width=4)
                                                                                 Filter: ((ca_state)::text = 'IL'::text)
 Planning time: 494.676 ms
 Optimizer: PQO version 3.8.0
(65 rows)

-- end query 1 in stream 0 using template query30.tpl
