-- start query 1 in stream 0 using template query10.tpl
explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3,
  cd_dep_count,
  count(*) cnt4,
  cd_dep_employed_count,
  count(*) cnt5,
  cd_dep_college_count,
  count(*) cnt6
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_county in ('Walker County','Richland County','Gaines County','Douglas County','Dona Ana County') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2002 and
                d_moy between 4 and 4+3) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_moy between 4 ANd 4+3) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_moy between 4 and 4+3))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
limit 100;
                                                                                                                                                                                         QUERY PLAN                                                                                                                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..502867.90 rows=34 width=85)
   ->  Gather Motion 3:1  (slice10; segments: 3)  (cost=0.00..502867.89 rows=100 width=85)
         Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
         ->  Limit  (cost=0.00..502867.86 rows=34 width=85)
               ->  GroupAggregate  (cost=0.00..502867.85 rows=286 width=85)
                     Group Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                     ->  Sort  (cost=0.00..502867.82 rows=286 width=85)
                           Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                           ->  Redistribute Motion 3:3  (slice9; segments: 3)  (cost=0.00..502866.69 rows=286 width=85)
                                 Hash Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                                 ->  Result  (cost=0.00..502866.62 rows=286 width=85)
                                       ->  HashAggregate  (cost=0.00..502866.62 rows=286 width=85)
                                             Group Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                                             ->  Hash Join  (cost=0.00..502863.59 rows=2853 width=37)
                                                   Hash Cond: (customer_demographics.cd_demo_sk = customer.c_current_cdemo_sk)
                                                   ->  Table Scan on customer_demographics  (cost=0.00..456.00 rows=640260 width=41)
                                                   ->  Hash  (cost=502230.58..502230.58 rows=2853 width=4)
                                                         ->  Redistribute Motion 3:3  (slice8; segments: 3)  (cost=0.00..502230.58 rows=2853 width=4)
                                                               Hash Key: customer.c_current_cdemo_sk
                                                               ->  Hash Join  (cost=0.00..502230.55 rows=2853 width=4)
                                                                     Hash Cond: (customer.c_current_addr_sk = customer_address.ca_address_sk)
                                                                     ->  Result  (cost=0.00..500933.20 rows=3631726 width=8)
                                                                           Filter: ((COALESCE((count((count()))), 0::bigint) > 0::bigint) OR (COALESCE((count((count()))), 0::bigint) > 0::bigint))
                                                                           ->  Result  (cost=0.00..500624.09 rows=4697615 width=24)
                                                                                 ->  Hash Left Join  (cost=0.00..500511.35 rows=4697615 width=24)
                                                                                       Hash Cond: (customer.c_customer_sk = catalog_sales.cs_ship_customer_sk)
                                                                                       ->  Hash Left Join  (cost=0.00..350297.46 rows=3299067 width=20)
                                                                                             Hash Cond: (customer.c_customer_sk = web_sales.ws_bill_customer_sk)
                                                                                             ->  Result  (cost=0.00..274520.38 rows=2140901 width=12)
                                                                                                   Filter: (COALESCE((count((count()))), 0::bigint) > 0::bigint)
                                                                                                   ->  Result  (cost=0.00..274344.29 rows=5352253 width=20)
                                                                                                         ->  Hash Left Join  (cost=0.00..274237.24 rows=5352253 width=20)
                                                                                                               Hash Cond: (customer.c_customer_sk = store_sales.ss_customer_sk)
                                                                                                               ->  Table Scan on customer  (cost=0.00..754.40 rows=3999967 width=12)
                                                                                                               ->  Hash  (cost=271092.30..271092.30 rows=3228201 width=12)
                                                                                                                     ->  HashAggregate  (cost=0.00..271092.30 rows=3228201 width=12)
                                                                                                                           Group Key: store_sales.ss_customer_sk
                                                                                                                           ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..270678.85 rows=3228201 width=12)
                                                                                                                                 Hash Key: store_sales.ss_customer_sk
                                                                                                                                 ->  Result  (cost=0.00..270557.59 rows=3228201 width=12)
                                                                                                                                       ->  HashAggregate  (cost=0.00..270557.59 rows=3228201 width=12)
                                                                                                                                             Group Key: store_sales.ss_customer_sk
                                                                                                                                             ->  Hash Join  (cost=0.00..256377.32 rows=113618862 width=4)
                                                                                                                                                   Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                                                                                                                   ->  Dynamic Table Scan on store_sales (dynamic scan id: 1)  (cost=0.00..68542.76 rows=959996672 width=8)
                                                                                                                                                   ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                                                                                         ->  Partition Selector for store_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                                                                               ->  Broadcast Motion 3:3  (slice1; segments: 3)  (cost=0.00..434.57 rows=216 width=4)
                                                                                                                                                                     ->  Table Scan on date_dim  (cost=0.00..434.56 rows=72 width=4)
                                                                                                                                                                           Filter: ((d_year = 2002) AND (d_moy >= 4) AND (d_moy <= 7))
                                                                                             ->  Hash  (cost=74064.66..74064.66 rows=2937034 width=12)
                                                                                                   ->  HashAggregate  (cost=0.00..74064.66 rows=2937034 width=12)
                                                                                                         Group Key: web_sales.ws_bill_customer_sk
                                                                                                         ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=0.00..73688.50 rows=2937034 width=12)
                                                                                                               Hash Key: web_sales.ws_bill_customer_sk
                                                                                                               ->  Result  (cost=0.00..73578.18 rows=2937034 width=12)
                                                                                                                     ->  HashAggregate  (cost=0.00..73578.18 rows=2937034 width=12)
                                                                                                                           Group Key: web_sales.ws_bill_customer_sk
                                                                                                                           ->  Hash Join  (cost=0.00..70023.98 rows=28420439 width=4)
                                                                                                                                 Hash Cond: (web_sales.ws_sold_date_sk = date_dim_1.d_date_sk)
                                                                                                                                 ->  Dynamic Table Scan on web_sales (dynamic scan id: 2)  (cost=0.00..22739.00 rows=240000000 width=8)
                                                                                                                                 ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                                                                       ->  Partition Selector for web_sales (dynamic scan id: 2)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                                                             ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=0.00..434.57 rows=216 width=4)
                                                                                                                                                   ->  Table Scan on date_dim date_dim_1  (cost=0.00..434.56 rows=72 width=4)
                                                                                                                                                         Filter: ((d_year = 2002) AND (d_moy >= 4) AND (d_moy <= 7))
                                                                                       ->  Hash  (cost=147867.67..147867.67 rows=3593100 width=12)
                                                                                             ->  HashAggregate  (cost=0.00..147867.67 rows=3593100 width=12)
                                                                                                   Group Key: catalog_sales.cs_ship_customer_sk
                                                                                                   ->  Redistribute Motion 3:3  (slice6; segments: 3)  (cost=0.00..147407.48 rows=3593101 width=12)
                                                                                                         Hash Key: catalog_sales.cs_ship_customer_sk
                                                                                                         ->  Result  (cost=0.00..147272.52 rows=3593101 width=12)
                                                                                                               ->  HashAggregate  (cost=0.00..147272.52 rows=3593101 width=12)
                                                                                                                     Group Key: catalog_sales.cs_ship_customer_sk
                                                                                                                     ->  Hash Join  (cost=0.00..140229.90 rows=56374949 width=4)
                                                                                                                           Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_2.d_date_sk)
                                                                                                                           ->  Dynamic Table Scan on catalog_sales (dynamic scan id: 3)  (cost=0.00..46102.37 rows=479993344 width=8)
                                                                                                                           ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                                                                 ->  Partition Selector for catalog_sales (dynamic scan id: 3)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                                                       ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.00..434.57 rows=216 width=4)
                                                                                                                                             ->  Table Scan on date_dim date_dim_2  (cost=0.00..434.56 rows=72 width=4)
                                                                                                                                                   Filter: ((d_year = 2002) AND (d_moy >= 4) AND (d_moy <= 7))
                                                                     ->  Hash  (cost=647.82..647.82 rows=3161 width=4)
                                                                           ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=0.00..647.82 rows=3161 width=4)
                                                                                 ->  Table Scan on customer_address  (cost=0.00..647.59 rows=1054 width=4)
                                                                                       Filter: ((ca_county)::text = ANY ('{"Walker County","Richland County","Gaines County","Douglas County","Dona Ana County"}'::text[]))
 Planning time: 1273.042 ms
 Optimizer: PQO version 3.8.0
(88 rows)

-- end query 1 in stream 0 using template query10.tpl
