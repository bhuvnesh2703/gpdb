-- start query 1 in stream 0 using template query35.tpl
explain
select   
  ca_state,
  cd_gender,
  cd_marital_status,
  count(*) cnt1,
  avg(cd_dep_count),
  max(cd_dep_count),
  sum(cd_dep_count),
  cd_dep_employed_count,
  count(*) cnt2,
  avg(cd_dep_employed_count),
  max(cd_dep_employed_count),
  sum(cd_dep_employed_count),
  cd_dep_college_count,
  count(*) cnt3,
  avg(cd_dep_college_count),
  max(cd_dep_college_count),
  sum(cd_dep_college_count)
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_qoy < 4) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_qoy < 4) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_qoy < 4))
 group by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 limit 100;
                                                                                                                                          QUERY PLAN                                                                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Result  (cost=0.00..526840.44 rows=34 width=99)
   ->  Limit  (cost=0.00..526840.44 rows=34 width=99)
         ->  Gather Motion 3:1  (slice10; segments: 3)  (cost=0.00..526840.43 rows=100 width=103)
               Merge Key: customer_address.ca_state, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
               ->  Limit  (cost=0.00..526840.40 rows=34 width=103)
                     ->  GroupAggregate  (cost=0.00..526840.39 rows=1256 width=103)
                           Group Key: customer_address.ca_state, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                           ->  Sort  (cost=0.00..526840.19 rows=1256 width=103)
                                 Sort Key: customer_address.ca_state, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                                 ->  Redistribute Motion 3:3  (slice9; segments: 3)  (cost=0.00..526832.64 rows=1256 width=103)
                                       Hash Key: customer_address.ca_state, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                                       ->  Result  (cost=0.00..526832.24 rows=1256 width=103)
                                             ->  HashAggregate  (cost=0.00..526832.24 rows=1256 width=103)
                                                   Group Key: customer_address.ca_state, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                                                   ->  Hash Join  (cost=0.00..523861.06 rows=3631726 width=19)
                                                         Hash Cond: (customer.c_current_cdemo_sk = customer_demographics.cd_demo_sk)
                                                         ->  Redistribute Motion 3:3  (slice8; segments: 3)  (cost=0.00..522138.35 rows=3631726 width=7)
                                                               Hash Key: customer.c_current_cdemo_sk
                                                               ->  Hash Join  (cost=0.00..522058.78 rows=3631726 width=7)
                                                                     Hash Cond: (customer.c_current_addr_sk = customer_address.ca_address_sk)
                                                                     ->  Redistribute Motion 3:3  (slice7; segments: 3)  (cost=0.00..520195.19 rows=3631726 width=8)
                                                                           Hash Key: customer.c_current_addr_sk
                                                                           ->  Result  (cost=0.00..520104.25 rows=3631726 width=8)
                                                                                 Filter: ((COALESCE((count((count()))), 0::bigint) > 0::bigint) OR (COALESCE((count((count()))), 0::bigint) > 0::bigint))
                                                                                 ->  Result  (cost=0.00..519795.15 rows=4697615 width=24)
                                                                                       ->  Hash Left Join  (cost=0.00..519682.41 rows=4697615 width=24)
                                                                                             Hash Cond: (customer.c_customer_sk = catalog_sales.cs_ship_customer_sk)
                                                                                             ->  Hash Left Join  (cost=0.00..364021.48 rows=3299067 width=20)
                                                                                                   Hash Cond: (customer.c_customer_sk = web_sales.ws_bill_customer_sk)
                                                                                                   ->  Result  (cost=0.00..285498.36 rows=2140901 width=12)
                                                                                                         Filter: (COALESCE((count((count()))), 0::bigint) > 0::bigint)
                                                                                                         ->  Result  (cost=0.00..285322.27 rows=5352253 width=20)
                                                                                                               ->  Hash Left Join  (cost=0.00..285215.22 rows=5352253 width=20)
                                                                                                                     Hash Cond: (customer.c_customer_sk = store_sales.ss_customer_sk)
                                                                                                                     ->  Table Scan on customer  (cost=0.00..754.40 rows=3999967 width=12)
                                                                                                                     ->  Hash  (cost=282070.28..282070.28 rows=3228201 width=12)
                                                                                                                           ->  HashAggregate  (cost=0.00..282070.28 rows=3228201 width=12)
                                                                                                                                 Group Key: store_sales.ss_customer_sk
                                                                                                                                 ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..281656.82 rows=3228201 width=12)
                                                                                                                                       Hash Key: store_sales.ss_customer_sk
                                                                                                                                       ->  Result  (cost=0.00..281535.57 rows=3228201 width=12)
                                                                                                                                             ->  HashAggregate  (cost=0.00..281535.57 rows=3228201 width=12)
                                                                                                                                                   Group Key: store_sales.ss_customer_sk
                                                                                                                                                   ->  Hash Join  (cost=0.00..257485.36 rows=192761949 width=4)
                                                                                                                                                         Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                                                                                                                         ->  Dynamic Table Scan on store_sales (dynamic scan id: 1)  (cost=0.00..68542.76 rows=959996672 width=8)
                                                                                                                                                         ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                                                                                               ->  Partition Selector for store_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                                                                                     ->  Broadcast Motion 3:3  (slice1; segments: 3)  (cost=0.00..434.59 rows=366 width=4)
                                                                                                                                                                           ->  Table Scan on date_dim  (cost=0.00..434.56 rows=122 width=4)
                                                                                                                                                                                 Filter: ((d_year = 1999) AND (d_qoy < 4))
                                                                                                   ->  Hash  (cost=76810.70..76810.70 rows=2937034 width=12)
                                                                                                         ->  HashAggregate  (cost=0.00..76810.70 rows=2937034 width=12)
                                                                                                               Group Key: web_sales.ws_bill_customer_sk
                                                                                                               ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=0.00..76434.54 rows=2937034 width=12)
                                                                                                                     Hash Key: web_sales.ws_bill_customer_sk
                                                                                                                     ->  Result  (cost=0.00..76324.23 rows=2937034 width=12)
                                                                                                                           ->  HashAggregate  (cost=0.00..76324.23 rows=2937034 width=12)
                                                                                                                                 Group Key: web_sales.ws_bill_customer_sk
                                                                                                                                 ->  Hash Join  (cost=0.00..70301.18 rows=48217162 width=4)
                                                                                                                                       Hash Cond: (web_sales.ws_sold_date_sk = date_dim_1.d_date_sk)
                                                                                                                                       ->  Dynamic Table Scan on web_sales (dynamic scan id: 2)  (cost=0.00..22739.00 rows=240000000 width=8)
                                                                                                                                       ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                                                                             ->  Partition Selector for web_sales (dynamic scan id: 2)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                                                                   ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=0.00..434.59 rows=366 width=4)
                                                                                                                                                         ->  Table Scan on date_dim date_dim_1  (cost=0.00..434.56 rows=122 width=4)
                                                                                                                                                               Filter: ((d_year = 1999) AND (d_qoy < 4))
                                                                                             ->  Hash  (cost=153314.69..153314.69 rows=3593101 width=12)
                                                                                                   ->  HashAggregate  (cost=0.00..153314.69 rows=3593101 width=12)
                                                                                                         Group Key: catalog_sales.cs_ship_customer_sk
                                                                                                         ->  Redistribute Motion 3:3  (slice6; segments: 3)  (cost=0.00..152854.50 rows=3593101 width=12)
                                                                                                               Hash Key: catalog_sales.cs_ship_customer_sk
                                                                                                               ->  Result  (cost=0.00..152719.55 rows=3593101 width=12)
                                                                                                                     ->  HashAggregate  (cost=0.00..152719.55 rows=3593101 width=12)
                                                                                                                           Group Key: catalog_sales.cs_ship_customer_sk
                                                                                                                           ->  Hash Join  (cost=0.00..140779.71 rows=95643846 width=4)
                                                                                                                                 Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_2.d_date_sk)
                                                                                                                                 ->  Dynamic Table Scan on catalog_sales (dynamic scan id: 3)  (cost=0.00..46102.37 rows=479993344 width=8)
                                                                                                                                 ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                                                                       ->  Partition Selector for catalog_sales (dynamic scan id: 3)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                                                             ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.00..434.59 rows=366 width=4)
                                                                                                                                                   ->  Table Scan on date_dim date_dim_2  (cost=0.00..434.56 rows=122 width=4)
                                                                                                                                                         Filter: ((d_year = 1999) AND (d_qoy < 4))
                                                                     ->  Hash  (cost=581.74..581.74 rows=2000530 width=7)
                                                                           ->  Table Scan on customer_address  (cost=0.00..581.74 rows=2000530 width=7)
                                                         ->  Hash  (cost=456.00..456.00 rows=640260 width=20)
                                                               ->  Table Scan on customer_demographics  (cost=0.00..456.00 rows=640260 width=20)
 Planning time: 1246.077 ms
 Optimizer: PQO version 3.8.0
(89 rows)

-- end query 1 in stream 0 using template query35.tpl
