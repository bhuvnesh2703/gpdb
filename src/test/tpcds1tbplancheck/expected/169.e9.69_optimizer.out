-- start query 1 in stream 0 using template query69.tpl
explain select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100;
                                                                                                                                  QUERY PLAN                                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..494478.94 rows=34 width=49)
   ->  Gather Motion 3:1  (slice10; segments: 3)  (cost=0.00..494478.94 rows=100 width=49)
         Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
         ->  Limit  (cost=0.00..494478.92 rows=34 width=49)
               ->  GroupAggregate  (cost=0.00..494478.92 rows=71 width=49)
                     Group Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                     ->  Sort  (cost=0.00..494478.91 rows=71 width=49)
                           Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                           ->  Redistribute Motion 3:3  (slice9; segments: 3)  (cost=0.00..494478.79 rows=71 width=49)
                                 Hash Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                                 ->  Result  (cost=0.00..494478.78 rows=71 width=49)
                                       ->  HashAggregate  (cost=0.00..494478.78 rows=71 width=49)
                                             Group Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                                             ->  Hash Join  (cost=0.00..494469.37 rows=14671 width=25)
                                                   Hash Cond: (customer_demographics.cd_demo_sk = customer.c_current_cdemo_sk)
                                                   ->  Table Scan on customer_demographics  (cost=0.00..456.00 rows=640260 width=29)
                                                   ->  Hash  (cost=493852.17..493852.17 rows=14671 width=4)
                                                         ->  Redistribute Motion 3:3  (slice8; segments: 3)  (cost=0.00..493852.17 rows=14671 width=4)
                                                               Hash Key: customer.c_current_cdemo_sk
                                                               ->  Hash Join  (cost=0.00..493851.98 rows=14671 width=4)
                                                                     Hash Cond: (customer.c_current_addr_sk = customer_address.ca_address_sk)
                                                                     ->  Redistribute Motion 3:3  (slice7; segments: 3)  (cost=0.00..493104.17 rows=516513 width=8)
                                                                           Hash Key: customer.c_current_addr_sk
                                                                           ->  Result  (cost=0.00..493091.24 rows=516513 width=8)
                                                                                 Filter: (COALESCE((count((count()))), 0::bigint) = 0::bigint)
                                                                                 ->  Result  (cost=0.00..493029.41 rows=1879046 width=16)
                                                                                       ->  Hash Left Join  (cost=0.00..492999.35 rows=1879046 width=16)
                                                                                             Hash Cond: (customer.c_customer_sk = catalog_sales.cs_ship_customer_sk)
                                                                                             ->  Result  (cost=0.00..345444.70 rows=1319627 width=12)
                                                                                                   Filter: (COALESCE((count((count()))), 0::bigint) = 0::bigint)
                                                                                                   ->  Result  (cost=0.00..345336.17 rows=3299067 width=20)
                                                                                                         ->  Hash Left Join  (cost=0.00..345270.18 rows=3299067 width=20)
                                                                                                               Hash Cond: (customer.c_customer_sk = web_sales.ws_bill_customer_sk)
                                                                                                               ->  Result  (cost=0.00..270499.01 rows=2140901 width=12)
                                                                                                                     Filter: (COALESCE((count((count()))), 0::bigint) > 0::bigint)
                                                                                                                     ->  Result  (cost=0.00..270322.92 rows=5352253 width=20)
                                                                                                                           ->  Hash Left Join  (cost=0.00..270215.88 rows=5352253 width=20)
                                                                                                                                 Hash Cond: (customer.c_customer_sk = store_sales.ss_customer_sk)
                                                                                                                                 ->  Table Scan on customer  (cost=0.00..754.40 rows=3999967 width=12)
                                                                                                                                 ->  Hash  (cost=267070.94..267070.94 rows=3228201 width=12)
                                                                                                                                       ->  HashAggregate  (cost=0.00..267070.94 rows=3228201 width=12)
                                                                                                                                             Group Key: store_sales.ss_customer_sk
                                                                                                                                             ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..266657.48 rows=3228201 width=12)
                                                                                                                                                   Hash Key: store_sales.ss_customer_sk
                                                                                                                                                   ->  Result  (cost=0.00..266536.23 rows=3228201 width=12)
                                                                                                                                                         ->  HashAggregate  (cost=0.00..266536.23 rows=3228201 width=12)
                                                                                                                                                               Group Key: store_sales.ss_customer_sk
                                                                                                                                                               ->  Hash Join  (cost=0.00..255971.43 rows=84627808 width=4)
                                                                                                                                                                     Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                                                                                                                                     ->  Dynamic Table Scan on store_sales (dynamic scan id: 1)  (cost=0.00..68542.76 rows=959996672 width=8)
                                                                                                                                                                     ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                                                                                                           ->  Partition Selector for store_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                                                                                                 ->  Broadcast Motion 3:3  (slice1; segments: 3)  (cost=0.00..434.57 rows=161 width=4)
                                                                                                                                                                                       ->  Table Scan on date_dim  (cost=0.00..434.56 rows=54 width=4)
                                                                                                                                                                                             Filter: ((d_year = 1999) AND (d_moy >= 1) AND (d_moy <= 3))
                                                                                                               ->  Hash  (cost=73058.75..73058.75 rows=2937034 width=12)
                                                                                                                     ->  HashAggregate  (cost=0.00..73058.75 rows=2937034 width=12)
                                                                                                                           Group Key: web_sales.ws_bill_customer_sk
                                                                                                                           ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=0.00..72682.59 rows=2937034 width=12)
                                                                                                                                 Hash Key: web_sales.ws_bill_customer_sk
                                                                                                                                 ->  Result  (cost=0.00..72572.27 rows=2937034 width=12)
                                                                                                                                       ->  HashAggregate  (cost=0.00..72572.27 rows=2937034 width=12)
                                                                                                                                             Group Key: web_sales.ws_bill_customer_sk
                                                                                                                                             ->  Hash Join  (cost=0.00..69922.44 rows=21168663 width=4)
                                                                                                                                                   Hash Cond: (web_sales.ws_sold_date_sk = date_dim_1.d_date_sk)
                                                                                                                                                   ->  Dynamic Table Scan on web_sales (dynamic scan id: 2)  (cost=0.00..22739.00 rows=240000000 width=8)
                                                                                                                                                   ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                                                                                         ->  Partition Selector for web_sales (dynamic scan id: 2)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                                                                               ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=0.00..434.57 rows=161 width=4)
                                                                                                                                                                     ->  Table Scan on date_dim date_dim_1  (cost=0.00..434.56 rows=54 width=4)
                                                                                                                                                                           Filter: ((d_year = 1999) AND (d_moy >= 1) AND (d_moy <= 3))
                                                                                             ->  Hash  (cost=145872.35..145872.35 rows=3593101 width=12)
                                                                                                   ->  HashAggregate  (cost=0.00..145872.35 rows=3593101 width=12)
                                                                                                         Group Key: catalog_sales.cs_ship_customer_sk
                                                                                                         ->  Redistribute Motion 3:3  (slice6; segments: 3)  (cost=0.00..145412.16 rows=3593101 width=12)
                                                                                                               Hash Key: catalog_sales.cs_ship_customer_sk
                                                                                                               ->  Result  (cost=0.00..145277.21 rows=3593101 width=12)
                                                                                                                     ->  HashAggregate  (cost=0.00..145277.21 rows=3593101 width=12)
                                                                                                                           Group Key: catalog_sales.cs_ship_customer_sk
                                                                                                                           ->  Hash Join  (cost=0.00..140028.50 rows=41990284 width=4)
                                                                                                                                 Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_2.d_date_sk)
                                                                                                                                 ->  Dynamic Table Scan on catalog_sales (dynamic scan id: 3)  (cost=0.00..46102.37 rows=479993344 width=8)
                                                                                                                                 ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                                                                       ->  Partition Selector for catalog_sales (dynamic scan id: 3)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                                                             ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.00..434.57 rows=161 width=4)
                                                                                                                                                   ->  Table Scan on date_dim date_dim_2  (cost=0.00..434.56 rows=54 width=4)
                                                                                                                                                         Filter: ((d_year = 1999) AND (d_moy >= 1) AND (d_moy <= 3))
                                                                     ->  Hash  (cost=648.05..648.05 rows=38104 width=4)
                                                                           ->  Table Scan on customer_address  (cost=0.00..648.05 rows=38104 width=4)
                                                                                 Filter: ((ca_state)::text = ANY ('{CO,IL,MN}'::text[]))
 Planning time: 1779.947 ms
 Optimizer: PQO version 3.8.0
(92 rows)

-- end query 1 in stream 0 using template query69.tpl
