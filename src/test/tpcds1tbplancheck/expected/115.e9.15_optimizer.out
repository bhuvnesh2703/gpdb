-- start query 1 in stream 0 using template query15.tpl
explain
select  ca_zip
       ,sum(cs_sales_price)
 from catalog_sales
     ,customer
     ,customer_address
     ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
                                   '85392', '85460', '80348', '81792')
 	      or ca_state in ('CA','WA','GA')
 	      or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip
 order by ca_zip
 limit 100;
                                                                                                                                                   QUERY PLAN                                                                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..174808.30 rows=34 width=14)
   ->  Gather Motion 3:1  (slice6; segments: 3)  (cost=0.00..174808.30 rows=100 width=14)
         Merge Key: customer_address.ca_zip
         ->  Limit  (cost=0.00..174808.29 rows=34 width=14)
               ->  GroupAggregate  (cost=0.00..174808.29 rows=1108 width=14)
                     Group Key: customer_address.ca_zip
                     ->  Sort  (cost=0.00..174808.27 rows=1108 width=14)
                           Sort Key: customer_address.ca_zip
                           ->  Redistribute Motion 3:3  (slice5; segments: 3)  (cost=0.00..174807.38 rows=1108 width=14)
                                 Hash Key: customer_address.ca_zip
                                 ->  Result  (cost=0.00..174807.33 rows=1108 width=14)
                                       ->  HashAggregate  (cost=0.00..174807.33 rows=1108 width=14)
                                             Group Key: customer_address.ca_zip
                                             ->  Hash Join  (cost=0.00..172636.39 rows=17298984 width=11)
                                                   Hash Cond: (catalog_sales.cs_bill_customer_sk = customer.c_customer_sk)
                                                   Join Filter: ((substr((customer_address.ca_zip)::text, 1, 5) = ANY ('{85669,86197,88274,83405,86475,85392,85460,80348,81792}'::text[])) OR ((customer_address.ca_state)::text = ANY ('{CA,WA,GA}'::text[])) OR (catalog_sales.cs_sales_price > 500::numeric))
                                                   ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..147879.42 rows=42119340 width=9)
                                                         Hash Key: catalog_sales.cs_bill_customer_sk
                                                         ->  Hash Join  (cost=0.00..146692.92 rows=42119340 width=9)
                                                               Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)
                                                               ->  Dynamic Table Scan on catalog_sales (dynamic scan id: 1)  (cost=0.00..46102.37 rows=479993344 width=13)
                                                               ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                     ->  Partition Selector for catalog_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                           ->  Broadcast Motion 3:3  (slice1; segments: 3)  (cost=0.00..434.57 rows=161 width=4)
                                                                                 ->  Table Scan on date_dim  (cost=0.00..434.56 rows=54 width=4)
                                                                                       Filter: ((d_qoy = 2) AND (d_year = 2000))
                                                   ->  Hash  (cost=3378.87..3378.87 rows=3999967 width=13)
                                                         ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=0.00..3378.87 rows=3999967 width=13)
                                                               Hash Key: customer.c_customer_sk
                                                               ->  Hash Join  (cost=0.00..3216.11 rows=3999967 width=13)
                                                                     Hash Cond: (customer_address.ca_address_sk = customer.c_current_addr_sk)
                                                                     ->  Table Scan on customer_address  (cost=0.00..581.74 rows=2000530 width=13)
                                                                     ->  Hash  (cost=914.08..914.08 rows=3999967 width=8)
                                                                           ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=0.00..914.08 rows=3999967 width=8)
                                                                                 Hash Key: customer.c_current_addr_sk
                                                                                 ->  Table Scan on customer  (cost=0.00..754.40 rows=3999967 width=8)
 Planning time: 436.434 ms
 Optimizer: PQO version 3.8.0
(38 rows)

-- end query 1 in stream 0 using template query15.tpl
