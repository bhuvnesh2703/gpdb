-- start query 1 in stream 0 using template query42.tpl
explain
select  dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1  	
 	and dt.d_moy=12
 	and dt.d_year=1998
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by       sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ;
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..274343.31 rows=23 width=22)
   ->  Gather Motion 3:1  (slice4; segments: 3)  (cost=0.00..274343.31 rows=69 width=22)
         Merge Key: (pg_catalog.sum((sum(store_sales.ss_ext_sales_price)))), date_dim.d_year, item.i_category_id, item.i_category
         ->  Sort  (cost=0.00..274343.31 rows=23 width=22)
               Sort Key: (pg_catalog.sum((sum(store_sales.ss_ext_sales_price)))), date_dim.d_year, item.i_category_id, item.i_category
               ->  HashAggregate  (cost=0.00..274343.29 rows=23 width=22)
                     Group Key: date_dim.d_year, item.i_category_id, item.i_category
                     ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=0.00..274343.29 rows=23 width=22)
                           Hash Key: date_dim.d_year, item.i_category_id, item.i_category
                           ->  Result  (cost=0.00..274343.28 rows=23 width=22)
                                 ->  HashAggregate  (cost=0.00..274343.28 rows=23 width=22)
                                       Group Key: date_dim.d_year, item.i_category_id, item.i_category
                                       ->  Hash Join  (cost=0.00..274137.42 rows=551082 width=20)
                                             Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                             ->  Hash Join  (cost=0.00..270295.93 rows=18111260 width=20)
                                                   Hash Cond: (store_sales.ss_item_sk = item.i_item_sk)
                                                   ->  Dynamic Table Scan on store_sales (dynamic scan id: 1)  (cost=0.00..68542.76 rows=959996672 width=14)
                                                   ->  Hash  (cost=452.41..452.41 rows=5522 width=14)
                                                         ->  Broadcast Motion 3:3  (slice1; segments: 3)  (cost=0.00..452.41 rows=5522 width=14)
                                                               ->  Table Scan on item  (cost=0.00..451.02 rows=1841 width=14)
                                                                     Filter: (i_manager_id = 1)
                                             ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                   ->  Partition Selector for store_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                         ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=0.00..434.57 rows=56 width=8)
                                                               ->  Table Scan on date_dim  (cost=0.00..434.56 rows=19 width=8)
                                                                     Filter: ((d_moy = 12) AND (d_year = 1998))
 Planning time: 306.825 ms
 Optimizer: PQO version 3.8.0
(28 rows)

-- end query 1 in stream 0 using template query42.tpl
