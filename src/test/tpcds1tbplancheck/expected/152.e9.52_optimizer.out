-- start query 1 in stream 0 using template query52.tpl
explain
select  dt.d_year
 	,item.i_brand_id brand_id
 	,item.i_brand brand
 	,sum(ss_ext_sales_price) ext_price
 from date_dim dt
     ,store_sales
     ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
    and store_sales.ss_item_sk = item.i_item_sk
    and item.i_manager_id = 1
    and dt.d_moy=12
    and dt.d_year=1998
 group by dt.d_year
 	,item.i_brand
 	,item.i_brand_id
 order by dt.d_year
 	,ext_price desc
 	,brand_id
limit 100 ;
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..275194.03 rows=34 width=33)
   ->  Gather Motion 3:1  (slice4; segments: 3)  (cost=0.00..275194.02 rows=100 width=33)
         Merge Key: date_dim.d_year, (pg_catalog.sum((sum(store_sales.ss_ext_sales_price)))), item.i_brand_id
         ->  Limit  (cost=0.00..275194.01 rows=34 width=33)
               ->  Sort  (cost=0.00..275194.01 rows=1841 width=33)
                     Sort Key: date_dim.d_year, (pg_catalog.sum((sum(store_sales.ss_ext_sales_price)))), item.i_brand_id
                     ->  HashAggregate  (cost=0.00..275190.28 rows=1841 width=33)
                           Group Key: date_dim.d_year, item.i_brand_id, item.i_brand
                           ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=0.00..275189.56 rows=1841 width=33)
                                 Hash Key: date_dim.d_year, item.i_brand_id, item.i_brand
                                 ->  Result  (cost=0.00..275189.37 rows=1841 width=33)
                                       ->  HashAggregate  (cost=0.00..275189.37 rows=1841 width=33)
                                             Group Key: date_dim.d_year, item.i_brand_id, item.i_brand
                                             ->  Hash Join  (cost=0.00..274979.75 rows=551082 width=31)
                                                   Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                   ->  Hash Join  (cost=0.00..270995.72 rows=18111260 width=31)
                                                         Hash Cond: (store_sales.ss_item_sk = item.i_item_sk)
                                                         ->  Dynamic Table Scan on store_sales (dynamic scan id: 1)  (cost=0.00..68542.76 rows=959996672 width=14)
                                                         ->  Hash  (cost=453.53..453.53 rows=5522 width=25)
                                                               ->  Broadcast Motion 3:3  (slice1; segments: 3)  (cost=0.00..453.53 rows=5522 width=25)
                                                                     ->  Table Scan on item  (cost=0.00..451.06 rows=1841 width=25)
                                                                           Filter: (i_manager_id = 1)
                                                   ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                         ->  Partition Selector for store_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                               ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=0.00..434.57 rows=56 width=8)
                                                                     ->  Table Scan on date_dim  (cost=0.00..434.56 rows=19 width=8)
                                                                           Filter: ((d_moy = 12) AND (d_year = 1998))
 Planning time: 260.380 ms
 Optimizer: PQO version 3.8.0
(29 rows)

-- end query 1 in stream 0 using template query52.tpl
