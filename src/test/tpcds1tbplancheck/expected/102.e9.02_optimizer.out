-- start query 1 in stream 0 using template query2.tpl
explain
with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from web_sales) x
        union all
       (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1;
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice6; segments: 3)  (cost=0.00..364874.42 rows=267 width=60)
   Merge Key: share1_ref3.d_week_seq
   ->  Sort  (cost=0.00..364874.37 rows=89 width=60)
         Sort Key: share1_ref3.d_week_seq
         ->  Sequence  (cost=0.00..364874.17 rows=89 width=60)
               ->  Shared Scan (share slice:id 6:1)  (cost=0.00..363141.82 rows=3470 width=1)
                     ->  Materialize  (cost=0.00..363141.82 rows=3470 width=1)
                           ->  HashAggregate  (cost=0.00..363141.81 rows=3470 width=60)
                                 Group Key: date_dim_2.d_week_seq
                                 ->  Redistribute Motion 3:3  (slice5; segments: 3)  (cost=0.00..363141.26 rows=3470 width=60)
                                       Hash Key: date_dim_2.d_week_seq
                                       ->  Result  (cost=0.00..363140.60 rows=3470 width=60)
                                             ->  HashAggregate  (cost=0.00..363140.60 rows=3470 width=60)
                                                   Group Key: date_dim_2.d_week_seq
                                                   ->  Hash Join  (cost=0.00..259785.50 rows=719993344 width=17)
                                                         Hash Cond: (web_sales.ws_sold_date_sk = date_dim_2.d_date_sk)
                                                         ->  Append  (cost=0.00..87374.00 rows=719993344 width=9)
                                                               ->  Dynamic Table Scan on web_sales (dynamic scan id: 1)  (cost=0.00..22739.00 rows=240000000 width=9)
                                                               ->  Dynamic Table Scan on catalog_sales (dynamic scan id: 2)  (cost=0.00..46102.37 rows=479993344 width=9)
                                                         ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                               ->  Partition Selector for catalog_sales (dynamic scan id: 2)  (cost=10.00..100.00 rows=34 width=4)
                                                                     ->  Partition Selector for web_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                           ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..454.60 rows=73049 width=16)
                                                                                 ->  Table Scan on date_dim date_dim_2  (cost=0.00..432.96 rows=24350 width=16)
               ->  Result  (cost=0.00..1732.35 rows=89 width=60)
                     ->  Hash Join  (cost=0.00..1732.34 rows=89 width=116)
                           Hash Cond: (share1_ref3.d_week_seq = (share1_ref2.d_week_seq - 53))
                           ->  Hash Join  (cost=0.00..866.04 rows=122 width=60)
                                 Hash Cond: (share1_ref3.d_week_seq = date_dim.d_week_seq)
                                 ->  Shared Scan (share slice:id 6:1)  (cost=0.00..431.50 rows=3470 width=60)
                                 ->  Hash  (cost=433.76..433.76 rows=122 width=4)
                                       ->  Redistribute Motion 3:3  (slice1; segments: 3)  (cost=0.00..433.76 rows=122 width=4)
                                             Hash Key: date_dim.d_week_seq
                                             ->  Table Scan on date_dim  (cost=0.00..433.76 rows=122 width=4)
                                                   Filter: (d_year = 2001)
                           ->  Hash  (cost=866.06..866.06 rows=122 width=60)
                                 ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=0.00..866.06 rows=122 width=60)
                                       Hash Key: (share1_ref2.d_week_seq - 53)
                                       ->  Hash Join  (cost=0.00..866.04 rows=122 width=60)
                                             Hash Cond: (share1_ref2.d_week_seq = date_dim_1.d_week_seq)
                                             ->  Shared Scan (share slice:id 3:1)  (cost=0.00..431.50 rows=3470 width=60)
                                             ->  Hash  (cost=433.76..433.76 rows=122 width=4)
                                                   ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..433.76 rows=122 width=4)
                                                         Hash Key: date_dim_1.d_week_seq
                                                         ->  Table Scan on date_dim date_dim_1  (cost=0.00..433.76 rows=122 width=4)
                                                               Filter: (d_year = 2002)
 Planning time: 530.375 ms
 Optimizer: PQO version 3.8.0
(48 rows)

-- end query 1 in stream 0 using template query2.tpl
