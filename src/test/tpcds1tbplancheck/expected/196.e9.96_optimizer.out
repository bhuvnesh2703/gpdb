-- start query 1 in stream 0 using template query96.tpl
explain
select  count(*) 
from store_sales
    ,household_demographics 
    ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk   
    and ss_hdemo_sk = household_demographics.hd_demo_sk 
    and ss_store_sk = s_store_sk
    and time_dim.t_hour = 8
    and time_dim.t_minute >= 30
    and household_demographics.hd_dep_count = 5
    and store.s_store_name = 'ese'
order by count(*)
limit 100;
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..291355.50 rows=1 width=8)
   ->  Sort  (cost=0.00..291355.50 rows=1 width=8)
         Sort Key: (count((count())))
         ->  Aggregate  (cost=0.00..291355.50 rows=1 width=8)
               ->  Gather Motion 3:1  (slice4; segments: 3)  (cost=0.00..291355.50 rows=1 width=8)
                     ->  Aggregate  (cost=0.00..291355.50 rows=1 width=8)
                           ->  Hash Join  (cost=0.00..291355.50 rows=1283991 width=1)
                                 Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                 ->  Hash Join  (cost=0.00..289773.70 rows=6503831 width=4)
                                       Hash Cond: (store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)
                                       ->  Hash Join  (cost=0.00..277612.69 rows=65139577 width=8)
                                             Hash Cond: (store_sales.ss_sold_time_sk = time_dim.t_time_sk)
                                             ->  Sequence  (cost=0.00..68542.76 rows=959996672 width=12)
                                                   ->  Partition Selector for store_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                         Partitions selected: 80 (out of 80)
                                                   ->  Dynamic Table Scan on store_sales (dynamic scan id: 1)  (cost=0.00..68542.76 rows=959996672 width=12)
                                             ->  Hash  (cost=435.25..435.25 rows=3164 width=4)
                                                   ->  Broadcast Motion 3:3  (slice1; segments: 3)  (cost=0.00..435.25 rows=3164 width=4)
                                                         ->  Table Scan on time_dim  (cost=0.00..435.03 rows=1055 width=4)
                                                               Filter: ((t_hour = 8) AND (t_minute >= 30))
                                       ->  Hash  (cost=431.21..431.21 rows=720 width=4)
                                             ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=0.00..431.21 rows=720 width=4)
                                                   ->  Table Scan on household_demographics  (cost=0.00..431.15 rows=240 width=4)
                                                         Filter: (hd_dep_count = 5)
                                 ->  Hash  (cost=431.07..431.07 rows=100 width=4)
                                       ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=0.00..431.07 rows=100 width=4)
                                             ->  Table Scan on store  (cost=0.00..431.06 rows=34 width=4)
                                                   Filter: ((s_store_name)::text = 'ese'::text)
 Planning time: 313.868 ms
 Optimizer: PQO version 3.8.0
(30 rows)

-- end query 1 in stream 0 using template query96.tpl
