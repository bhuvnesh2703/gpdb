-- start query 1 in stream 0 using template query71.tpl
explain
select i_brand_id brand_id, i_brand brand,t_hour,t_minute,
 	sum(ext_price) ext_price
 from item, (select ws_ext_sales_price as ext_price, 
                        ws_sold_date_sk as sold_date_sk,
                        ws_item_sk as sold_item_sk,
                        ws_sold_time_sk as time_sk  
                 from web_sales,date_dim
                 where d_date_sk = ws_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 union all
                 select cs_ext_sales_price as ext_price,
                        cs_sold_date_sk as sold_date_sk,
                        cs_item_sk as sold_item_sk,
                        cs_sold_time_sk as time_sk
                 from catalog_sales,date_dim
                 where d_date_sk = cs_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 union all
                 select ss_ext_sales_price as ext_price,
                        ss_sold_date_sk as sold_date_sk,
                        ss_item_sk as sold_item_sk,
                        ss_sold_time_sk as time_sk
                 from store_sales,date_dim
                 where d_date_sk = ss_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 ) as tmp,time_dim
 where
   sold_item_sk = i_item_sk
   and i_manager_id=1
   and time_sk = t_time_sk
   and (t_meal_time = 'breakfast' or t_meal_time = 'dinner')
 group by i_brand, i_brand_id,t_hour,t_minute
 order by ext_price desc, i_brand_id
 limit 100;
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..517693.30 rows=34 width=37)
   ->  Gather Motion 3:1  (slice7; segments: 3)  (cost=0.00..517693.30 rows=100 width=37)
         Merge Key: (pg_catalog.sum((sum(web_sales.ws_ext_sales_price)))), item.i_brand_id
         ->  Limit  (cost=0.00..517693.29 rows=34 width=37)
               ->  Sort  (cost=0.00..517693.29 rows=17692 width=37)
                     Sort Key: (pg_catalog.sum((sum(web_sales.ws_ext_sales_price)))), item.i_brand_id
                     ->  HashAggregate  (cost=0.00..517640.91 rows=17692 width=37)
                           Group Key: item.i_brand_id, item.i_brand, time_dim.t_hour, time_dim.t_minute
                           ->  Redistribute Motion 3:3  (slice6; segments: 3)  (cost=0.00..517631.76 rows=17692 width=37)
                                 Hash Key: item.i_brand_id, item.i_brand, time_dim.t_hour, time_dim.t_minute
                                 ->  Result  (cost=0.00..517629.71 rows=17692 width=37)
                                       ->  HashAggregate  (cost=0.00..517629.71 rows=17692 width=37)
                                             Group Key: item.i_brand_id, item.i_brand, time_dim.t_hour, time_dim.t_minute
                                             ->  Hash Join  (cost=0.00..517620.56 rows=17692 width=34)
                                                   Hash Cond: (web_sales.ws_sold_time_sk = time_dim.t_time_sk)
                                                   ->  Hash Join  (cost=0.00..517115.46 rows=320974 width=30)
                                                         Hash Cond: (web_sales.ws_item_sk = item.i_item_sk)
                                                         ->  Append  (cost=0.00..507355.06 rows=51010497 width=13)
                                                               ->  Hash Join  (cost=0.00..75393.84 rows=7306636 width=17)
                                                                     Hash Cond: (web_sales.ws_sold_date_sk = date_dim.d_date_sk)
                                                                     ->  Dynamic Table Scan on web_sales (dynamic scan id: 1)  (cost=0.00..22739.00 rows=240000000 width=17)
                                                                     ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                           ->  Partition Selector for web_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice1; segments: 3)  (cost=0.00..434.56 rows=56 width=4)
                                                                                       ->  Table Scan on date_dim  (cost=0.00..434.56 rows=19 width=4)
                                                                                             Filter: ((d_moy = 12) AND (d_year = 2001))
                                                               ->  Hash Join  (cost=0.00..150968.91 rows=14493486 width=17)
                                                                     Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_1.d_date_sk)
                                                                     ->  Dynamic Table Scan on catalog_sales (dynamic scan id: 2)  (cost=0.00..46102.37 rows=479993344 width=17)
                                                                     ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                           ->  Partition Selector for catalog_sales (dynamic scan id: 2)  (cost=10.00..100.00 rows=34 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=0.00..434.56 rows=56 width=4)
                                                                                       ->  Table Scan on date_dim date_dim_1  (cost=0.00..434.56 rows=19 width=4)
                                                                                             Filter: ((d_moy = 12) AND (d_year = 2001))
                                                               ->  Hash Join  (cost=0.00..280329.18 rows=29210375 width=18)
                                                                     Hash Cond: (store_sales.ss_sold_date_sk = date_dim_2.d_date_sk)
                                                                     ->  Dynamic Table Scan on store_sales (dynamic scan id: 3)  (cost=0.00..68542.76 rows=959996672 width=18)
                                                                     ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                           ->  Partition Selector for store_sales (dynamic scan id: 3)  (cost=10.00..100.00 rows=34 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=0.00..434.56 rows=56 width=4)
                                                                                       ->  Table Scan on date_dim date_dim_2  (cost=0.00..434.56 rows=19 width=4)
                                                                                             Filter: ((d_moy = 12) AND (d_year = 2001))
                                                         ->  Hash  (cost=453.53..453.53 rows=5522 width=25)
                                                               ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..453.53 rows=5522 width=25)
                                                                     ->  Table Scan on item  (cost=0.00..451.06 rows=1841 width=25)
                                                                           Filter: (i_manager_id = 1)
                                                   ->  Hash  (cost=436.88..436.88 rows=12005 width=12)
                                                         ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.00..436.88 rows=12005 width=12)
                                                               ->  Table Scan on time_dim  (cost=0.00..434.30 rows=4002 width=12)
                                                                     Filter: ((t_meal_time = 'breakfast'::bpchar) OR (t_meal_time = 'dinner'::bpchar))
 Planning time: 702.153 ms
 Optimizer: PQO version 3.8.0
(52 rows)

-- end query 1 in stream 0 using template query71.tpl
