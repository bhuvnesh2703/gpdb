explain select *
from (select  i_category
            ,i_class
            ,i_brand
            ,i_product_name
            ,d_year
            ,d_qoy
            ,d_moy
            ,s_store_id
            ,sumsales
            ,rank() over (partition by i_category order by sumsales desc) rk2
from (select i_category
            ,i_class
            ,i_brand
            ,i_product_name
            ,d_year
            ,d_qoy
            ,d_moy
            ,s_store_id
            ,sumsales
            ,rank() over (partition by i_category, tempval order by sumsales desc) rk
            from (select i_category
                  ,i_class
                  ,i_brand
                  ,i_product_name
                  ,d_year
                  ,d_qoy
                  ,d_moy
                  ,s_store_id
                  ,mod((random()*1000)::int,1000) as tempval
                  ,sum(coalesce(ss_sales_price*ss_quantity,0)) sumsales
            from store_sales
                ,date_dim
                ,store
                ,item
       where  ss_sold_date_sk=d_date_sk
          and ss_item_sk=i_item_sk
          and ss_store_sk = s_store_sk
          and d_month_seq between 1212 and 1212+11
       group by  rollup(i_category, i_class, i_brand, i_product_name, d_year, d_qoy, d_moy,s_store_id)
        ) inner1
      ) dw1
where rk <= 100
) dw2
where rk2 <= 100
order by i_category
        ,i_class
        ,i_brand
        ,i_product_name
        ,d_year
        ,d_qoy
        ,d_moy
        ,s_store_id
        ,sumsales
        ,rk2
limit 100
;
                                                                                                                                                                    QUERY PLAN                                                                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..1777550.17 rows=34 width=68)
   ->  Gather Motion 3:1  (slice16; segments: 3)  (cost=0.00..1777550.16 rows=100 width=68)
         Merge Key: share0_ref2.i_category, share0_ref2.i_class, share0_ref2.i_brand, share0_ref2.i_product_name, share0_ref2.d_year, share0_ref2.d_qoy, share0_ref2.d_moy, share0_ref2.s_store_id, (pg_catalog.sum((sum(COALESCE((share0_ref2.ss_sales_price * (share0_ref2.ss_quantity)::numeric), 0::numeric))))), (rank() OVER (?))
         ->  Limit  (cost=0.00..1777550.13 rows=34 width=68)
               ->  Sort  (cost=0.00..1777550.13 rows=11633229 width=68)
                     Sort Key: share0_ref2.i_category, share0_ref2.i_class, share0_ref2.i_brand, share0_ref2.i_product_name, share0_ref2.d_year, share0_ref2.d_qoy, share0_ref2.d_moy, share0_ref2.s_store_id, (pg_catalog.sum((sum(COALESCE((share0_ref2.ss_sales_price * (share0_ref2.ss_quantity)::numeric), 0::numeric))))), (rank() OVER (?))
                     ->  Result  (cost=0.00..1672272.12 rows=11633229 width=68)
                           Filter: ((rank() OVER (?)) <= 100)
                           ->  WindowAgg  (cost=0.00..1671315.29 rows=29083071 width=68)
                                 Partition By: share0_ref2.i_category
                                 Order By: (pg_catalog.sum((sum(COALESCE((share0_ref2.ss_sales_price * (share0_ref2.ss_quantity)::numeric), 0::numeric)))))
                                 ->  Sort  (cost=0.00..1669570.30 rows=29083071 width=60)
                                       Sort Key: share0_ref2.i_category, (pg_catalog.sum((sum(COALESCE((share0_ref2.ss_sales_price * (share0_ref2.ss_quantity)::numeric), 0::numeric)))))
                                       ->  Redistribute Motion 3:3  (slice15; segments: 3)  (cost=0.00..1424260.17 rows=29083071 width=60)
                                             Hash Key: share0_ref2.i_category
                                             ->  Result  (cost=0.00..1418798.37 rows=29083071 width=60)
                                                   Filter: ((rank() OVER (?)) <= 100)
                                                   ->  WindowAgg  (cost=0.00..1416406.28 rows=72707678 width=68)
                                                         Partition By: share0_ref2.i_category, (mod(int4((random() * 1000::double precision)), 1000))
                                                         Order By: (pg_catalog.sum((sum(COALESCE((share0_ref2.ss_sales_price * (share0_ref2.ss_quantity)::numeric), 0::numeric)))))
                                                         ->  Sort  (cost=0.00..1411752.99 rows=72707678 width=64)
                                                               Sort Key: share0_ref2.i_category, (mod(int4((random() * 1000::double precision)), 1000)), (pg_catalog.sum((sum(COALESCE((share0_ref2.ss_sales_price * (share0_ref2.ss_quantity)::numeric), 0::numeric)))))
                                                               ->  Redistribute Motion 3:3  (slice14; segments: 3)  (cost=0.00..722714.66 rows=72707678 width=64)
                                                                     Hash Key: share0_ref2.i_category, (mod(int4((random() * 1000::double precision)), 1000))
                                                                     ->  Result  (cost=0.00..708149.85 rows=72707678 width=64)
                                                                           ->  Result  (cost=0.00..708149.85 rows=72707678 width=64)
                                                                                 ->  Sequence  (cost=0.00..703496.56 rows=72707678 width=91)
                                                                                       ->  Shared Scan (share slice:id 14:0)  (cost=0.00..472595.63 rows=187875308 width=1)
                                                                                             ->  Materialize  (cost=0.00..472595.63 rows=187875308 width=1)
                                                                                                   ->  Hash Join  (cost=0.00..472407.75 rows=187875308 width=93)
                                                                                                         Hash Cond: (store_sales.ss_item_sk = item.i_item_sk)
                                                                                                         ->  Hash Join  (cost=0.00..372488.69 rows=187875308 width=43)
                                                                                                               Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                                                                                               ->  Hash Join  (cost=0.00..307696.23 rows=187875308 width=30)
                                                                                                                     Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                                                                                     ->  Dynamic Table Scan on store_sales (dynamic scan id: 1)  (cost=0.00..68542.76 rows=959996672 width=22)
                                                                                                                     ->  Hash  (cost=100.00..100.00 rows=34 width=4)
                                                                                                                           ->  Partition Selector for store_sales (dynamic scan id: 1)  (cost=10.00..100.00 rows=34 width=4)
                                                                                                                                 ->  Broadcast Motion 3:3  (slice11; segments: 3)  (cost=0.00..433.86 rows=356 width=16)
                                                                                                                                       ->  Table Scan on date_dim  (cost=0.00..433.76 rows=119 width=16)
                                                                                                                                             Filter: ((d_month_seq >= 1212) AND (d_month_seq <= 1223))
                                                                                                               ->  Hash  (cost=431.44..431.44 rows=1002 width=21)
                                                                                                                     ->  Broadcast Motion 3:3  (slice12; segments: 3)  (cost=0.00..431.44 rows=1002 width=21)
                                                                                                                           ->  Table Scan on store  (cost=0.00..431.05 rows=334 width=21)
                                                                                                         ->  Hash  (cost=769.12..769.12 rows=299247 width=58)
                                                                                                               ->  Broadcast Motion 3:3  (slice13; segments: 3)  (cost=0.00..769.12 rows=299247 width=58)
                                                                                                                     ->  Table Scan on item  (cost=0.00..447.68 rows=99749 width=58)
                                                                                       ->  Append  (cost=0.00..224284.54 rows=72707678 width=91)
                                                                                             ->  HashAggregate  (cost=0.00..58020.90 rows=21376036 width=91)
                                                                                                   Group Key: share0_ref2.i_category, share0_ref2.i_class, share0_ref2.i_brand, share0_ref2.i_product_name, share0_ref2.d_year, share0_ref2.d_qoy, share0_ref2.d_moy, share0_ref2.s_store_id
                                                                                                   ->  Redistribute Motion 3:3  (slice1; segments: 3)  (cost=0.00..34665.72 rows=21376036 width=91)
                                                                                                         Hash Key: share0_ref2.i_category, share0_ref2.i_class, share0_ref2.i_brand, share0_ref2.i_product_name, share0_ref2.d_year, share0_ref2.d_qoy, share0_ref2.d_moy, share0_ref2.s_store_id
                                                                                                         ->  Result  (cost=0.00..28577.19 rows=21376036 width=91)
                                                                                                               ->  HashAggregate  (cost=0.00..28577.19 rows=21376036 width=91)
                                                                                                                     Group Key: share0_ref2.i_category, share0_ref2.i_class, share0_ref2.i_brand, share0_ref2.i_product_name, share0_ref2.d_year, share0_ref2.d_qoy, share0_ref2.d_moy, share0_ref2.s_store_id
                                                                                                                     ->  Shared Scan (share slice:id 1:0)  (cost=0.00..5222.01 rows=21376036 width=93)
                                                                                             ->  Result  (cost=0.00..49430.90 rows=19973941 width=82)
                                                                                                   ->  HashAggregate  (cost=0.00..47793.04 rows=19973941 width=74)
                                                                                                         Group Key: share0_ref3.i_category, share0_ref3.i_class, share0_ref3.i_brand, share0_ref3.i_product_name, share0_ref3.d_year, share0_ref3.d_qoy, share0_ref3.d_moy
                                                                                                         ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..29026.92 rows=19973941 width=74)
                                                                                                               Hash Key: share0_ref3.i_category, share0_ref3.i_class, share0_ref3.i_brand, share0_ref3.i_product_name, share0_ref3.d_year, share0_ref3.d_qoy, share0_ref3.d_moy
                                                                                                               ->  Result  (cost=0.00..24400.56 rows=19973941 width=74)
                                                                                                                     ->  HashAggregate  (cost=0.00..24400.56 rows=19973941 width=74)
                                                                                                                           Group Key: share0_ref3.i_category, share0_ref3.i_class, share0_ref3.i_brand, share0_ref3.i_product_name, share0_ref3.d_year, share0_ref3.d_qoy, share0_ref3.d_moy
                                                                                                                           ->  Shared Scan (share slice:id 2:0)  (cost=0.00..4346.23 rows=21376036 width=76)
                                                                                             ->  Result  (cost=0.00..43467.69 rows=19973941 width=82)
                                                                                                   ->  HashAggregate  (cost=0.00..41829.83 rows=19973941 width=70)
                                                                                                         Group Key: share0_ref4.i_category, share0_ref4.i_class, share0_ref4.i_brand, share0_ref4.i_product_name, share0_ref4.d_year, share0_ref4.d_qoy
                                                                                                         ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=0.00..25724.64 rows=19973941 width=70)
                                                                                                               Hash Key: share0_ref4.i_category, share0_ref4.i_class, share0_ref4.i_brand, share0_ref4.i_product_name, share0_ref4.d_year, share0_ref4.d_qoy
                                                                                                               ->  Result  (cost=0.00..21348.35 rows=19973941 width=70)
                                                                                                                     ->  HashAggregate  (cost=0.00..21348.35 rows=19973941 width=70)
                                                                                                                           Group Key: share0_ref4.i_category, share0_ref4.i_class, share0_ref4.i_brand, share0_ref4.i_product_name, share0_ref4.d_year, share0_ref4.d_qoy
                                                                                                                           ->  Shared Scan (share slice:id 3:0)  (cost=0.00..4140.17 rows=21376036 width=72)
                                                                                             ->  Result  (cost=0.00..28954.95 rows=11221763 width=82)
                                                                                                   ->  HashAggregate  (cost=0.00..28034.77 rows=11221763 width=66)
                                                                                                         Group Key: share0_ref5.i_category, share0_ref5.i_class, share0_ref5.i_brand, share0_ref5.i_product_name, share0_ref5.d_year
                                                                                                         ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=0.00..20471.46 rows=11221763 width=66)
                                                                                                               Hash Key: share0_ref5.i_category, share0_ref5.i_class, share0_ref5.i_brand, share0_ref5.i_product_name, share0_ref5.d_year
                                                                                                               ->  Result  (cost=0.00..18153.27 rows=11221763 width=66)
                                                                                                                     ->  HashAggregate  (cost=0.00..18153.27 rows=11221763 width=66)
                                                                                                                           Group Key: share0_ref5.i_category, share0_ref5.i_class, share0_ref5.i_brand, share0_ref5.i_product_name, share0_ref5.d_year
                                                                                                                           ->  Shared Scan (share slice:id 4:0)  (cost=0.00..3934.10 rows=21376036 width=68)
                                                                                             ->  Result  (cost=0.00..15037.42 rows=99749 width=82)
                                                                                                   ->  HashAggregate  (cost=0.00..15029.24 rows=99749 width=62)
                                                                                                         Group Key: share0_ref6.i_category, share0_ref6.i_class, share0_ref6.i_brand, share0_ref6.i_product_name
                                                                                                         ->  Redistribute Motion 3:3  (slice5; segments: 3)  (cost=0.00..14975.12 rows=99749 width=62)
                                                                                                               Hash Key: share0_ref6.i_category, share0_ref6.i_class, share0_ref6.i_brand, share0_ref6.i_product_name
                                                                                                               ->  Result  (cost=0.00..14955.76 rows=99749 width=62)
                                                                                                                     ->  HashAggregate  (cost=0.00..14955.76 rows=99749 width=62)
                                                                                                                           Group Key: share0_ref6.i_category, share0_ref6.i_class, share0_ref6.i_brand, share0_ref6.i_product_name
                                                                                                                           ->  Shared Scan (share slice:id 5:0)  (cost=0.00..3728.04 rows=21376036 width=64)
                                                                                             ->  Result  (cost=0.00..10789.41 rows=62040 width=67)
                                                                                                   ->  HashAggregate  (cost=0.00..10785.25 rows=62040 width=39)
                                                                                                         Group Key: share0_ref7.i_category, share0_ref7.i_class, share0_ref7.i_brand
                                                                                                         ->  Redistribute Motion 3:3  (slice6; segments: 3)  (cost=0.00..10760.75 rows=62040 width=39)
                                                                                                               Hash Key: share0_ref7.i_category, share0_ref7.i_class, share0_ref7.i_brand
                                                                                                               ->  Result  (cost=0.00..10753.17 rows=62040 width=39)
                                                                                                                     ->  HashAggregate  (cost=0.00..10753.17 rows=62040 width=39)
                                                                                                                           Group Key: share0_ref7.i_category, share0_ref7.i_class, share0_ref7.i_brand
                                                                                                                           ->  Shared Scan (share slice:id 6:0)  (cost=0.00..2543.17 rows=21376036 width=41)
                                                                                             ->  Result  (cost=0.00..7034.97 rows=207 width=58)
                                                                                                   ->  HashAggregate  (cost=0.00..7034.96 rows=207 width=22)
                                                                                                         Group Key: share0_ref8.i_category, share0_ref8.i_class
                                                                                                         ->  Redistribute Motion 3:3  (slice7; segments: 3)  (cost=0.00..7034.91 rows=207 width=22)
                                                                                                               Hash Key: share0_ref8.i_category, share0_ref8.i_class
                                                                                                               ->  Result  (cost=0.00..7034.89 rows=207 width=22)
                                                                                                                     ->  HashAggregate  (cost=0.00..7034.89 rows=207 width=22)
                                                                                                                           Group Key: share0_ref8.i_category, share0_ref8.i_class
                                                                                                                           ->  Shared Scan (share slice:id 7:0)  (cost=0.00..1667.39 rows=21376036 width=24)
                                                                                             ->  Result  (cost=0.00..3937.85 rows=4 width=58)
                                                                                                   ->  HashAggregate  (cost=0.00..3937.85 rows=4 width=14)
                                                                                                         Group Key: share0_ref9.i_category
                                                                                                         ->  Redistribute Motion 3:3  (slice8; segments: 3)  (cost=0.00..3937.85 rows=4 width=14)
                                                                                                               Hash Key: share0_ref9.i_category
                                                                                                               ->  Result  (cost=0.00..3937.85 rows=4 width=14)
                                                                                                                     ->  HashAggregate  (cost=0.00..3937.85 rows=4 width=14)
                                                                                                                           Group Key: share0_ref9.i_category
                                                                                                                           ->  Shared Scan (share slice:id 8:0)  (cost=0.00..1255.26 rows=21376036 width=16)
                                                                                             ->  Result  (cost=0.00..994.04 rows=1 width=60)
                                                                                                   ->  Redistribute Motion 1:3  (slice10)  (cost=0.00..994.04 rows=1 width=8)
                                                                                                         ->  Aggregate  (cost=0.00..994.04 rows=1 width=8)
                                                                                                               ->  Gather Motion 3:1  (slice9; segments: 3)  (cost=0.00..994.04 rows=1 width=8)
                                                                                                                     ->  Aggregate  (cost=0.00..994.04 rows=1 width=8)
                                                                                                                           ->  Shared Scan (share slice:id 9:0)  (cost=0.00..946.16 rows=21376036 width=10)
 Planning time: 623.068 ms
 Optimizer: PQO version 3.8.0
(127 rows)

